{
  "resourceType": "Bundle",
  "id": "types",
  "meta": {
    "lastUpdated": "2016-12-07T09:17:27.548-05:00"
  },
  "type": "collection",
  "entry": [
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/date",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "date",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/date",
        "name": "date",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "primitive-type",
        "abstract": false,
        "type": "date",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "date",
              "path": "date",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "date.id",
              "path": "date.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "id"
                }
              ]
            },
            {
              "id": "date.extension",
              "path": "date.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "date.value",
              "path": "date.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "-?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1]))?)?"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:gYear OR xsd:gYearMonth OR xsd:date"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:gYear OR xsd:gYearMonth OR xsd:date"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "date",
              "path": "date",
              "min": 0,
              "max": "*"
            },
            {
              "id": "date.value",
              "path": "date.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "-?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1]))?)?"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:gYear OR xsd:gYearMonth OR xsd:date"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:gYear OR xsd:gYearMonth OR xsd:date"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/dateTime",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "dateTime",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/dateTime",
        "name": "dateTime",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "primitive-type",
        "abstract": false,
        "type": "dateTime",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "dateTime",
              "path": "dateTime",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "dateTime.id",
              "path": "dateTime.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "id"
                }
              ]
            },
            {
              "id": "dateTime.extension",
              "path": "dateTime.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "dateTime.value",
              "path": "dateTime.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "-?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:gYear OR xsd:gYearMonth OR xsd:date OR xsd:dateTime"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:gYear OR xsd:gYearMonth OR xsd:date OR xsd:dateTime"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "dateTime",
              "path": "dateTime",
              "min": 0,
              "max": "*"
            },
            {
              "id": "dateTime.value",
              "path": "dateTime.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "-?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:gYear OR xsd:gYearMonth OR xsd:date OR xsd:dateTime"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:gYear OR xsd:gYearMonth OR xsd:date OR xsd:dateTime"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/code",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "code",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/code",
        "name": "code",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "primitive-type",
        "abstract": false,
        "type": "code",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/string",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "code",
              "path": "code",
              "min": 0,
              "max": "*",
              "base": {
                "path": "code",
                "min": 0,
                "max": "*"
              },
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "code.extension",
              "path": "code.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "code.value",
              "path": "code.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "string.value",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "[^\\s]+([\\s]?[^\\s]+)*"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:token"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:token"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "code",
              "path": "code",
              "min": 0,
              "max": "*"
            },
            {
              "id": "code.value",
              "path": "code.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "[^\\s]+([\\s]?[^\\s]+)*"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:token"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:token"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/string",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "string",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/string",
        "name": "string",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "primitive-type",
        "abstract": false,
        "type": "string",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "string",
              "path": "string",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "string.id",
              "path": "string.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "id"
                }
              ]
            },
            {
              "id": "string.extension",
              "path": "string.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "string.value",
              "path": "string.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:string"
                      }
                    ]
                  }
                }
              ],
              "maxLength": 1048576
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "string",
              "path": "string",
              "min": 0,
              "max": "*"
            },
            {
              "id": "string.value",
              "path": "string.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:string"
                      }
                    ]
                  }
                }
              ],
              "maxLength": 1048576
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/integer",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "integer",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/integer",
        "name": "integer",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "primitive-type",
        "abstract": false,
        "type": "integer",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "integer",
              "path": "integer",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "integer.id",
              "path": "integer.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "id"
                }
              ]
            },
            {
              "id": "integer.extension",
              "path": "integer.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "integer.value",
              "path": "integer.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "-?([0]|([1-9][0-9]*))"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "number"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:int"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:int"
                      }
                    ]
                  }
                }
              ],
              "minValueInteger": -2147483648,
              "maxValueInteger": 2147483647
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "integer",
              "path": "integer",
              "min": 0,
              "max": "*"
            },
            {
              "id": "integer.value",
              "path": "integer.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "-?([0]|([1-9][0-9]*))"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "number"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:int"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:int"
                      }
                    ]
                  }
                }
              ],
              "minValueInteger": -2147483648,
              "maxValueInteger": 2147483647
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/oid",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "oid",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/oid",
        "name": "oid",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "primitive-type",
        "abstract": false,
        "type": "oid",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/uri",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "oid",
              "path": "oid",
              "min": 0,
              "max": "*",
              "base": {
                "path": "oid",
                "min": 0,
                "max": "*"
              },
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "oid.extension",
              "path": "oid.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "oid.value",
              "path": "oid.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "uri.value",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "urn:oid:(0|[1-9][0-9]*)(\\.(0|[1-9][0-9]*))*"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:anyURI"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:string"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "oid",
              "path": "oid",
              "min": 0,
              "max": "*"
            },
            {
              "id": "oid.value",
              "path": "oid.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "urn:oid:(0|[1-9][0-9]*)(\\.(0|[1-9][0-9]*))*"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:anyURI"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:string"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/uri",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "uri",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/uri",
        "name": "uri",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "primitive-type",
        "abstract": false,
        "type": "uri",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "uri",
              "path": "uri",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "uri.id",
              "path": "uri.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "id"
                }
              ]
            },
            {
              "id": "uri.extension",
              "path": "uri.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "uri.value",
              "path": "uri.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:anyURI"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:string"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "uri",
              "path": "uri",
              "min": 0,
              "max": "*"
            },
            {
              "id": "uri.value",
              "path": "uri.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:anyURI"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:string"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/uuid",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "uuid",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/uuid",
        "name": "uuid",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "primitive-type",
        "abstract": false,
        "type": "uuid",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/uri",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "uuid",
              "path": "uuid",
              "min": 0,
              "max": "*",
              "base": {
                "path": "uuid",
                "min": 0,
                "max": "*"
              },
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "uuid.extension",
              "path": "uuid.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "uuid.value",
              "path": "uuid.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "uri.value",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:anyURI"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:string"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "uuid",
              "path": "uuid",
              "min": 0,
              "max": "*"
            },
            {
              "id": "uuid.value",
              "path": "uuid.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:anyURI"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:string"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/instant",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "instant",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/instant",
        "name": "instant",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "primitive-type",
        "abstract": false,
        "type": "instant",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "instant",
              "path": "instant",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "instant.id",
              "path": "instant.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "id"
                }
              ]
            },
            {
              "id": "instant.extension",
              "path": "instant.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "instant.value",
              "path": "instant.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:dateTime"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:dateTime"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "instant",
              "path": "instant",
              "min": 0,
              "max": "*"
            },
            {
              "id": "instant.value",
              "path": "instant.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:dateTime"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:dateTime"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/boolean",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "boolean",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/boolean",
        "name": "boolean",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "primitive-type",
        "abstract": false,
        "type": "boolean",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "boolean",
              "path": "boolean",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "boolean.id",
              "path": "boolean.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "id"
                }
              ]
            },
            {
              "id": "boolean.extension",
              "path": "boolean.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "boolean.value",
              "path": "boolean.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "boolean"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:boolean"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:boolean"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "boolean",
              "path": "boolean",
              "min": 0,
              "max": "*"
            },
            {
              "id": "boolean.value",
              "path": "boolean.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "boolean"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:boolean"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:boolean"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/base64Binary",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "base64Binary",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/base64Binary",
        "name": "base64Binary",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "primitive-type",
        "abstract": false,
        "type": "base64Binary",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "base64Binary",
              "path": "base64Binary",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "base64Binary.id",
              "path": "base64Binary.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "id"
                }
              ]
            },
            {
              "id": "base64Binary.extension",
              "path": "base64Binary.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "base64Binary.value",
              "path": "base64Binary.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:base64Binary"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:base64Binary"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "base64Binary",
              "path": "base64Binary",
              "min": 0,
              "max": "*"
            },
            {
              "id": "base64Binary.value",
              "path": "base64Binary.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:base64Binary"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:base64Binary"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/unsignedInt",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "unsignedInt",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/unsignedInt",
        "name": "unsignedInt",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "primitive-type",
        "abstract": false,
        "type": "unsignedInt",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/integer",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "unsignedInt",
              "path": "unsignedInt",
              "min": 0,
              "max": "*",
              "base": {
                "path": "unsignedInt",
                "min": 0,
                "max": "*"
              },
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "unsignedInt.extension",
              "path": "unsignedInt.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "unsignedInt.value",
              "path": "unsignedInt.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "integer.value",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "[0]|([1-9][0-9]*)"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "number"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:nonNegativeInteger"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:nonNegativeInteger"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "unsignedInt",
              "path": "unsignedInt",
              "min": 0,
              "max": "*"
            },
            {
              "id": "unsignedInt.value",
              "path": "unsignedInt.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "[0]|([1-9][0-9]*)"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "number"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:nonNegativeInteger"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:nonNegativeInteger"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/markdown",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "markdown",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/markdown",
        "name": "markdown",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "primitive-type",
        "abstract": false,
        "type": "markdown",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/string",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "markdown",
              "path": "markdown",
              "min": 0,
              "max": "*",
              "base": {
                "path": "markdown",
                "min": 0,
                "max": "*"
              },
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "markdown.extension",
              "path": "markdown.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "markdown.value",
              "path": "markdown.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "string.value",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:string"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "markdown",
              "path": "markdown",
              "min": 0,
              "max": "*"
            },
            {
              "id": "markdown.value",
              "path": "markdown.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:string"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/time",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "time",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/time",
        "name": "time",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "primitive-type",
        "abstract": false,
        "type": "time",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "time",
              "path": "time",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "time.id",
              "path": "time.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "id"
                }
              ]
            },
            {
              "id": "time.extension",
              "path": "time.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "time.value",
              "path": "time.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:time"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:time"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "time",
              "path": "time",
              "min": 0,
              "max": "*"
            },
            {
              "id": "time.value",
              "path": "time.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:time"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:time"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/id",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "id",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/id",
        "name": "id",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "primitive-type",
        "abstract": false,
        "type": "id",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/string",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "id",
              "path": "id",
              "min": 0,
              "max": "*",
              "base": {
                "path": "id",
                "min": 0,
                "max": "*"
              },
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "id.extension",
              "path": "id.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "id.value",
              "path": "id.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "string.value",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "[A-Za-z0-9\\-\\.]{1,64}"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:string"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "id",
              "path": "id",
              "min": 0,
              "max": "*"
            },
            {
              "id": "id.value",
              "path": "id.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "[A-Za-z0-9\\-\\.]{1,64}"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:string"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/positiveInt",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "positiveInt",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/positiveInt",
        "name": "positiveInt",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "primitive-type",
        "abstract": false,
        "type": "positiveInt",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/integer",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "positiveInt",
              "path": "positiveInt",
              "min": 0,
              "max": "*",
              "base": {
                "path": "positiveInt",
                "min": 0,
                "max": "*"
              },
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "positiveInt.extension",
              "path": "positiveInt.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "positiveInt.value",
              "path": "positiveInt.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "integer.value",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "[1-9][0-9]*"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "number"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:positiveInteger"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:positiveInteger"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "positiveInt",
              "path": "positiveInt",
              "min": 0,
              "max": "*"
            },
            {
              "id": "positiveInt.value",
              "path": "positiveInt.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "[1-9][0-9]*"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "number"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:positiveInteger"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:positiveInteger"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/decimal",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "decimal",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/decimal",
        "name": "decimal",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "primitive-type",
        "abstract": false,
        "type": "decimal",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "decimal",
              "path": "decimal",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "decimal.id",
              "path": "decimal.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "id"
                }
              ]
            },
            {
              "id": "decimal.extension",
              "path": "decimal.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "decimal.value",
              "path": "decimal.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "-?([0]|([1-9][0-9]*))(\\.[0-9]+)?"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "number"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:decimal"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:decimal"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "decimal",
              "path": "decimal",
              "min": 0,
              "max": "*"
            },
            {
              "id": "decimal.value",
              "path": "decimal.value",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "extension": [
                    {
                      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-regex",
                      "valueString": "-?([0]|([1-9][0-9]*))(\\.[0-9]+)?"
                    }
                  ],
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "number"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xsd:decimal"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "xsd:decimal"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/xhtml",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "xhtml",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/xhtml",
        "name": "xhtml",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "primitive-type",
        "abstract": false,
        "type": "xhtml",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "xhtml",
              "path": "xhtml",
              "min": 0,
              "max": "*"
            },
            {
              "id": "xhtml.id",
              "path": "xhtml.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "id"
                }
              ]
            },
            {
              "id": "xhtml.extension",
              "path": "xhtml.extension",
              "min": 0,
              "max": "0",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "xhtml.value",
              "path": "xhtml.value",
              "representation": [
                "xhtml"
              ],
              "min": 1,
              "max": "1",
              "type": [
                {
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xhtml:div"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "string"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "xhtml",
              "path": "xhtml",
              "min": 0,
              "max": "*"
            },
            {
              "id": "xhtml.extension",
              "path": "xhtml.extension",
              "max": "0"
            },
            {
              "id": "xhtml.value",
              "path": "xhtml.value",
              "representation": [
                "xhtml"
              ],
              "min": 1,
              "max": "1",
              "type": [
                {
                  "_code": {
                    "extension": [
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type",
                        "valueString": "string"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type",
                        "valueString": "xhtml:div"
                      },
                      {
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type",
                        "valueString": "string"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Reference",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Reference",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Reference",
        "name": "Reference",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Reference",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "Reference",
              "path": "Reference",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                },
                {
                  "key": "ref-1",
                  "severity": "error",
                  "human": "SHALL have a contained resource if a local reference is provided",
                  "expression": "reference.startsWith('#').not() or (reference.substring(1).trace('url') in %resource.contained.id.trace('ids'))",
                  "xpath": "not(starts-with(f:reference/@value, '#')) or exists(ancestor::*[self::f:entry or self::f:parameter]/f:resource/f:*/f:contained/f:*[f:id/@value=substring-after(current()/f:reference/@value, '#')]|/*/f:contained/f:*[f:id/@value=substring-after(current()/f:reference/@value, '#')])"
                }
              ]
            },
            {
              "id": "Reference.id",
              "path": "Reference.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Reference.extension",
              "path": "Reference.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Reference.reference",
              "path": "Reference.reference",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "condition": [
                "ref-1"
              ],
              "isSummary": true
            },
            {
              "id": "Reference.identifier",
              "path": "Reference.identifier",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Identifier"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Reference.display",
              "path": "Reference.display",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Reference",
              "path": "Reference",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "ref-1",
                  "severity": "error",
                  "human": "SHALL have a contained resource if a local reference is provided",
                  "expression": "reference.startsWith('#').not() or (reference.substring(1).trace('url') in %resource.contained.id.trace('ids'))",
                  "xpath": "not(starts-with(f:reference/@value, '#')) or exists(ancestor::*[self::f:entry or self::f:parameter]/f:resource/f:*/f:contained/f:*[f:id/@value=substring-after(current()/f:reference/@value, '#')]|/*/f:contained/f:*[f:id/@value=substring-after(current()/f:reference/@value, '#')])"
                }
              ]
            },
            {
              "id": "Reference.reference",
              "path": "Reference.reference",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "condition": [
                "ref-1"
              ],
              "isSummary": true
            },
            {
              "id": "Reference.identifier",
              "path": "Reference.identifier",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Identifier"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Reference.display",
              "path": "Reference.display",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Quantity",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Quantity",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Quantity",
        "name": "Quantity",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "purpose": "Need to able to capture all sorts of measured values, even if the measured value are not precisely quantified. Values include exact measures such as 3.51g, customary units such as 3 tablets, and currencies such as $100.32USD.",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Quantity",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "Quantity",
              "path": "Quantity",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                },
                {
                  "key": "qty-3",
                  "severity": "error",
                  "human": "If a code for the unit is present, the system SHALL also be present",
                  "expression": "code.empty() or system.exists()",
                  "xpath": "not(exists(f:code)) or exists(f:system)"
                }
              ]
            },
            {
              "id": "Quantity.id",
              "path": "Quantity.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Quantity.extension",
              "path": "Quantity.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Quantity.value",
              "path": "Quantity.value",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Quantity.comparator",
              "path": "Quantity.comparator",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "meaningWhenMissing": "If there is no comparator, then there is no modification of the value",
              "isModifier": true,
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "How the Quantity should be understood and represented.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/quantity-comparator"
                }
              }
            },
            {
              "id": "Quantity.unit",
              "path": "Quantity.unit",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Quantity.system",
              "path": "Quantity.system",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "condition": [
                "qty-3"
              ],
              "isSummary": true
            },
            {
              "id": "Quantity.code",
              "path": "Quantity.code",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Quantity",
              "path": "Quantity",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "qty-3",
                  "severity": "error",
                  "human": "If a code for the unit is present, the system SHALL also be present",
                  "expression": "code.empty() or system.exists()",
                  "xpath": "not(exists(f:code)) or exists(f:system)"
                }
              ]
            },
            {
              "id": "Quantity.value",
              "path": "Quantity.value",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Quantity.comparator",
              "path": "Quantity.comparator",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "meaningWhenMissing": "If there is no comparator, then there is no modification of the value",
              "isModifier": true,
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "How the Quantity should be understood and represented.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/quantity-comparator"
                }
              }
            },
            {
              "id": "Quantity.unit",
              "path": "Quantity.unit",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Quantity.system",
              "path": "Quantity.system",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "condition": [
                "qty-3"
              ],
              "isSummary": true
            },
            {
              "id": "Quantity.code",
              "path": "Quantity.code",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Period",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Period",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Period",
        "name": "Period",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Period",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "Period",
              "path": "Period",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                },
                {
                  "key": "per-1",
                  "severity": "error",
                  "human": "If present, start SHALL have a lower value than end",
                  "expression": "start.empty() or end.empty() or (start <= end)",
                  "xpath": "not(exists(f:start)) or not(exists(f:end)) or (f:start/@value <= f:end/@value)"
                }
              ]
            },
            {
              "id": "Period.id",
              "path": "Period.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Period.extension",
              "path": "Period.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Period.start",
              "path": "Period.start",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "dateTime"
                }
              ],
              "condition": [
                "per-1"
              ],
              "isSummary": true
            },
            {
              "id": "Period.end",
              "path": "Period.end",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "dateTime"
                }
              ],
              "meaningWhenMissing": "If the end of the period is missing, it means that the period is ongoing",
              "condition": [
                "per-1"
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Period",
              "path": "Period",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "per-1",
                  "severity": "error",
                  "human": "If present, start SHALL have a lower value than end",
                  "expression": "start.empty() or end.empty() or (start <= end)",
                  "xpath": "not(exists(f:start)) or not(exists(f:end)) or (f:start/@value <= f:end/@value)"
                }
              ]
            },
            {
              "id": "Period.start",
              "path": "Period.start",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "dateTime"
                }
              ],
              "condition": [
                "per-1"
              ],
              "isSummary": true
            },
            {
              "id": "Period.end",
              "path": "Period.end",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "dateTime"
                }
              ],
              "meaningWhenMissing": "If the end of the period is missing, it means that the period is ongoing",
              "condition": [
                "per-1"
              ],
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Attachment",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Attachment",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Attachment",
        "name": "Attachment",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "purpose": "Many models need to include data defined in other specifications that is complex and opaque to the healthcare model. This includes documents, media recordings, structured data, etc.",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Attachment",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "Attachment",
              "path": "Attachment",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                },
                {
                  "key": "att-1",
                  "severity": "error",
                  "human": "It the Attachment has data, it SHALL have a contentType",
                  "expression": "data.empty() or contentType.exists()",
                  "xpath": "not(exists(f:data)) or exists(f:contentType)"
                }
              ]
            },
            {
              "id": "Attachment.id",
              "path": "Attachment.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Attachment.extension",
              "path": "Attachment.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Attachment.contentType",
              "path": "Attachment.contentType",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueCode": "text/plain; charset=UTF-8, image/png"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "The mime type of an attachment. Any valid mime type is allowed.",
                "valueSetUri": "http://www.rfc-editor.org/bcp/bcp13.txt"
              }
            },
            {
              "id": "Attachment.language",
              "path": "Attachment.language",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueCode": "en-AU"
                }
              ],
              "isSummary": true,
              "binding": {
                "extension": [
                  {
                    "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
                    "valueReference": {
                      "reference": "http://hl7.org/fhir/ValueSet/all-languages"
                    }
                  }
                ],
                "strength": "extensible",
                "description": "A human language.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/languages"
                }
              }
            },
            {
              "id": "Attachment.data",
              "path": "Attachment.data",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "base64Binary"
                }
              ]
            },
            {
              "id": "Attachment.url",
              "path": "Attachment.url",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueUri": "http://www.acme.com/logo-small.png"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Attachment.size",
              "path": "Attachment.size",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "unsignedInt"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Attachment.hash",
              "path": "Attachment.hash",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "base64Binary"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Attachment.title",
              "path": "Attachment.title",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueString": "Official Corporate Logo"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Attachment.creation",
              "path": "Attachment.creation",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "dateTime"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Attachment",
              "path": "Attachment",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "att-1",
                  "severity": "error",
                  "human": "It the Attachment has data, it SHALL have a contentType",
                  "expression": "data.empty() or contentType.exists()",
                  "xpath": "not(exists(f:data)) or exists(f:contentType)"
                }
              ]
            },
            {
              "id": "Attachment.contentType",
              "path": "Attachment.contentType",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueCode": "text/plain; charset=UTF-8, image/png"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "The mime type of an attachment. Any valid mime type is allowed.",
                "valueSetUri": "http://www.rfc-editor.org/bcp/bcp13.txt"
              }
            },
            {
              "id": "Attachment.language",
              "path": "Attachment.language",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueCode": "en-AU"
                }
              ],
              "isSummary": true,
              "binding": {
                "extension": [
                  {
                    "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
                    "valueReference": {
                      "reference": "http://hl7.org/fhir/ValueSet/all-languages"
                    }
                  }
                ],
                "strength": "extensible",
                "description": "A human language.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/languages"
                }
              }
            },
            {
              "id": "Attachment.data",
              "path": "Attachment.data",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "base64Binary"
                }
              ]
            },
            {
              "id": "Attachment.url",
              "path": "Attachment.url",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueUri": "http://www.acme.com/logo-small.png"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Attachment.size",
              "path": "Attachment.size",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "unsignedInt"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Attachment.hash",
              "path": "Attachment.hash",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "base64Binary"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Attachment.title",
              "path": "Attachment.title",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueString": "Official Corporate Logo"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Attachment.creation",
              "path": "Attachment.creation",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "dateTime"
                }
              ],
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Duration",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Duration",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Duration",
        "name": "Duration",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Duration",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Quantity",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "Duration",
              "path": "Duration",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "qty-3",
                  "severity": "error",
                  "human": "If a code for the unit is present, the system SHALL also be present",
                  "expression": "code.empty() or system.exists()",
                  "xpath": "not(exists(f:code)) or exists(f:system)",
                  "source": "Quantity"
                },
                {
                  "key": "drt-1",
                  "severity": "error",
                  "human": "There SHALL be a code if there is a value and it SHALL be an expression of time.  If system is present, it SHALL be UCUM.",
                  "expression": "(code or value.empty()) and (system.empty() or system = %ucum)",
                  "xpath": "(f:code or not(f:value)) and (not(exists(f:system)) or f:system/@value='http://unitsofmeasure.org')"
                }
              ]
            },
            {
              "id": "Duration.id",
              "path": "Duration.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Duration.extension",
              "path": "Duration.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Duration.value",
              "path": "Duration.value",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.value",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Duration.comparator",
              "path": "Duration.comparator",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.comparator",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "code"
                }
              ],
              "meaningWhenMissing": "If there is no comparator, then there is no modification of the value",
              "isModifier": true,
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "How the Quantity should be understood and represented.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/quantity-comparator"
                }
              }
            },
            {
              "id": "Duration.unit",
              "path": "Duration.unit",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.unit",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Duration.system",
              "path": "Duration.system",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.system",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "uri"
                }
              ],
              "condition": [
                "qty-3"
              ],
              "isSummary": true
            },
            {
              "id": "Duration.code",
              "path": "Duration.code",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.code",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Duration",
              "path": "Duration",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "drt-1",
                  "severity": "error",
                  "human": "There SHALL be a code if there is a value and it SHALL be an expression of time.  If system is present, it SHALL be UCUM.",
                  "expression": "(code or value.empty()) and (system.empty() or system = %ucum)",
                  "xpath": "(f:code or not(f:value)) and (not(exists(f:system)) or f:system/@value='http://unitsofmeasure.org')"
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Count",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Count",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Count",
        "name": "Count",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "purpose": "Need to able to capture all sorts of measured values, even if the measured value are not precisely quantified. Values include exact measures such as 3.51g, customary units such as 3 tablets, and currencies such as $100.32USD.",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Count",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Quantity",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "Count",
              "path": "Count",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "qty-3",
                  "severity": "error",
                  "human": "If a code for the unit is present, the system SHALL also be present",
                  "expression": "code.empty() or system.exists()",
                  "xpath": "not(exists(f:code)) or exists(f:system)",
                  "source": "Quantity"
                },
                {
                  "key": "cnt-3",
                  "severity": "error",
                  "human": "There SHALL be a code with a value of \"1\" if there is a value and it SHALL be an expression of length.  If system is present, it SHALL be UCUM.  If present, the value SHALL a whole number.",
                  "expression": "(code or value.empty()) and (system.empty() or system = %ucum) and (code.empty() or code = '1') and (value.empty() or value.toString().contains('.').not())",
                  "xpath": "(f:code or not(f:value)) and (not(exists(f:system)) or (f:system/@value='http://unitsofmeasure.org' and f:code/@value='1')) and not(contains(f:value/@value, '.'))"
                }
              ]
            },
            {
              "id": "Count.id",
              "path": "Count.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Count.extension",
              "path": "Count.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Count.value",
              "path": "Count.value",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.value",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Count.comparator",
              "path": "Count.comparator",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.comparator",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "code"
                }
              ],
              "meaningWhenMissing": "If there is no comparator, then there is no modification of the value",
              "isModifier": true,
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "How the Quantity should be understood and represented.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/quantity-comparator"
                }
              }
            },
            {
              "id": "Count.unit",
              "path": "Count.unit",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.unit",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Count.system",
              "path": "Count.system",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.system",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "uri"
                }
              ],
              "condition": [
                "qty-3"
              ],
              "isSummary": true
            },
            {
              "id": "Count.code",
              "path": "Count.code",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.code",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Count",
              "path": "Count",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "cnt-3",
                  "severity": "error",
                  "human": "There SHALL be a code with a value of \"1\" if there is a value and it SHALL be an expression of length.  If system is present, it SHALL be UCUM.  If present, the value SHALL a whole number.",
                  "expression": "(code or value.empty()) and (system.empty() or system = %ucum) and (code.empty() or code = '1') and (value.empty() or value.toString().contains('.').not())",
                  "xpath": "(f:code or not(f:value)) and (not(exists(f:system)) or (f:system/@value='http://unitsofmeasure.org' and f:code/@value='1')) and not(contains(f:value/@value, '.'))"
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Range",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Range",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Range",
        "name": "Range",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "purpose": "Need to be able to specify ranges of values.",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Range",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "Range",
              "path": "Range",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                },
                {
                  "key": "rng-2",
                  "severity": "error",
                  "human": "If present, low SHALL have a lower value than high",
                  "expression": "low.empty() or high.empty() or (low <= high)",
                  "xpath": "not(exists(f:low/f:value/@value)) or not(exists(f:high/f:value/@value)) or (number(f:low/f:value/@value) <= number(f:high/f:value/@value))"
                }
              ]
            },
            {
              "id": "Range.id",
              "path": "Range.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Range.extension",
              "path": "Range.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Range.low",
              "path": "Range.low",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Quantity",
                  "profile": "http://hl7.org/fhir/StructureDefinition/SimpleQuantity"
                }
              ],
              "condition": [
                "rng-2"
              ],
              "isSummary": true
            },
            {
              "id": "Range.high",
              "path": "Range.high",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Quantity",
                  "profile": "http://hl7.org/fhir/StructureDefinition/SimpleQuantity"
                }
              ],
              "condition": [
                "rng-2"
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Range",
              "path": "Range",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "rng-2",
                  "severity": "error",
                  "human": "If present, low SHALL have a lower value than high",
                  "expression": "low.empty() or high.empty() or (low <= high)",
                  "xpath": "not(exists(f:low/f:value/@value)) or not(exists(f:high/f:value/@value)) or (number(f:low/f:value/@value) <= number(f:high/f:value/@value))"
                }
              ]
            },
            {
              "id": "Range.low",
              "path": "Range.low",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Quantity",
                  "profile": "http://hl7.org/fhir/StructureDefinition/SimpleQuantity"
                }
              ],
              "condition": [
                "rng-2"
              ],
              "isSummary": true
            },
            {
              "id": "Range.high",
              "path": "Range.high",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Quantity",
                  "profile": "http://hl7.org/fhir/StructureDefinition/SimpleQuantity"
                }
              ],
              "condition": [
                "rng-2"
              ],
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Annotation",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Annotation",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Annotation",
        "name": "Annotation",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Annotation",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "Annotation",
              "path": "Annotation",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "Annotation.id",
              "path": "Annotation.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Annotation.extension",
              "path": "Annotation.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Annotation.author[x]",
              "path": "Annotation.author[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Practitioner"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Patient"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/RelatedPerson"
                },
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Annotation.time",
              "path": "Annotation.time",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "dateTime"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Annotation.text",
              "path": "Annotation.text",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Annotation",
              "path": "Annotation",
              "min": 0,
              "max": "*"
            },
            {
              "id": "Annotation.author[x]",
              "path": "Annotation.author[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Practitioner"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Patient"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/RelatedPerson"
                },
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Annotation.time",
              "path": "Annotation.time",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "dateTime"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Annotation.text",
              "path": "Annotation.text",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Money",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Money",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Money",
        "name": "Money",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Money",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Quantity",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "Money",
              "path": "Money",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "qty-3",
                  "severity": "error",
                  "human": "If a code for the unit is present, the system SHALL also be present",
                  "expression": "code.empty() or system.exists()",
                  "xpath": "not(exists(f:code)) or exists(f:system)",
                  "source": "Quantity"
                },
                {
                  "key": "mny-1",
                  "severity": "error",
                  "human": "There SHALL be a code if there is a value and it SHALL be an expression of currency.  If system is present, it SHALL be ISO 4217 (system = \"urn:iso:std:iso:4217\" - currency).",
                  "expression": "(code or value.empty()) and (system.empty() or system = 'urn:iso:std:iso:4217')",
                  "xpath": "(f:code or not(f:value)) and (not(exists(f:system)) or f:system/@value='urn:iso:std:iso:4217')"
                }
              ]
            },
            {
              "id": "Money.id",
              "path": "Money.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Money.extension",
              "path": "Money.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Money.value",
              "path": "Money.value",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.value",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Money.comparator",
              "path": "Money.comparator",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.comparator",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "code"
                }
              ],
              "meaningWhenMissing": "If there is no comparator, then there is no modification of the value",
              "isModifier": true,
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "How the Quantity should be understood and represented.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/quantity-comparator"
                }
              }
            },
            {
              "id": "Money.unit",
              "path": "Money.unit",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.unit",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Money.system",
              "path": "Money.system",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.system",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "uri"
                }
              ],
              "condition": [
                "qty-3"
              ],
              "isSummary": true
            },
            {
              "id": "Money.code",
              "path": "Money.code",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.code",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Money",
              "path": "Money",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "mny-1",
                  "severity": "error",
                  "human": "There SHALL be a code if there is a value and it SHALL be an expression of currency.  If system is present, it SHALL be ISO 4217 (system = \"urn:iso:std:iso:4217\" - currency).",
                  "expression": "(code or value.empty()) and (system.empty() or system = 'urn:iso:std:iso:4217')",
                  "xpath": "(f:code or not(f:value)) and (not(exists(f:system)) or f:system/@value='urn:iso:std:iso:4217')"
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Identifier",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Identifier",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Identifier",
        "name": "Identifier",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "purpose": "Need to be able to identify things with confidence and be sure that the identification is not subject to misinterpretation.",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Identifier",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "Identifier",
              "path": "Identifier",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "Identifier.id",
              "path": "Identifier.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Identifier.extension",
              "path": "Identifier.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Identifier.use",
              "path": "Identifier.use",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isModifier": true,
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "Identifies the purpose for this identifier, if known .",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/identifier-use"
                }
              }
            },
            {
              "id": "Identifier.type",
              "path": "Identifier.type",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "CodeableConcept"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "extensible",
                "description": "A coded type for an identifier that can be used to determine which identifier to use for a specific purpose.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/identifier-type"
                }
              }
            },
            {
              "id": "Identifier.system",
              "path": "Identifier.system",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueUri": "http://www.acme.com/identifiers/patient or urn:ietf:rfc:3986 if the Identifier.value itself is a full uri"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Identifier.value",
              "path": "Identifier.value",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueString": "123456"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Identifier.period",
              "path": "Identifier.period",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Period"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Identifier.assigner",
              "path": "Identifier.assigner",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Organization"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Identifier",
              "path": "Identifier",
              "min": 0,
              "max": "*"
            },
            {
              "id": "Identifier.use",
              "path": "Identifier.use",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isModifier": true,
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "Identifies the purpose for this identifier, if known .",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/identifier-use"
                }
              }
            },
            {
              "id": "Identifier.type",
              "path": "Identifier.type",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "CodeableConcept"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "extensible",
                "description": "A coded type for an identifier that can be used to determine which identifier to use for a specific purpose.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/identifier-type"
                }
              }
            },
            {
              "id": "Identifier.system",
              "path": "Identifier.system",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueUri": "http://www.acme.com/identifiers/patient or urn:ietf:rfc:3986 if the Identifier.value itself is a full uri"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Identifier.value",
              "path": "Identifier.value",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueString": "123456"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Identifier.period",
              "path": "Identifier.period",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Period"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Identifier.assigner",
              "path": "Identifier.assigner",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Organization"
                }
              ],
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Coding",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Coding",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Coding",
        "name": "Coding",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "purpose": "References to codes are very common in healthcare models.",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Coding",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "Coding",
              "path": "Coding",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "Coding.id",
              "path": "Coding.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Coding.extension",
              "path": "Coding.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Coding.system",
              "path": "Coding.system",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Coding.version",
              "path": "Coding.version",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Coding.code",
              "path": "Coding.code",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Coding.display",
              "path": "Coding.display",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Coding.userSelected",
              "path": "Coding.userSelected",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "boolean"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Coding",
              "path": "Coding",
              "min": 0,
              "max": "*"
            },
            {
              "id": "Coding.system",
              "path": "Coding.system",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Coding.version",
              "path": "Coding.version",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Coding.code",
              "path": "Coding.code",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Coding.display",
              "path": "Coding.display",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Coding.userSelected",
              "path": "Coding.userSelected",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "boolean"
                }
              ],
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Signature",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Signature",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Signature",
        "name": "Signature",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "purpose": "There are a number of places where content must be signed in healthcare.",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Signature",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "Signature",
              "path": "Signature",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "Signature.id",
              "path": "Signature.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Signature.extension",
              "path": "Signature.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Signature.type",
              "path": "Signature.type",
              "min": 1,
              "max": "*",
              "type": [
                {
                  "code": "Coding"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "preferred",
                "description": "An indication of the reason that an entity signed the object",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/signature-type"
                }
              }
            },
            {
              "id": "Signature.when",
              "path": "Signature.when",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "instant"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Signature.who[x]",
              "path": "Signature.who[x]",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Practitioner"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/RelatedPerson"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Patient"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Device"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Organization"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Signature.onBehalfOf[x]",
              "path": "Signature.onBehalfOf[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Practitioner"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/RelatedPerson"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Patient"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Device"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Organization"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Signature.contentType",
              "path": "Signature.contentType",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "The mime type of an attachment. Any valid mime type is allowed.",
                "valueSetUri": "http://www.rfc-editor.org/bcp/bcp13.txt"
              }
            },
            {
              "id": "Signature.blob",
              "path": "Signature.blob",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "base64Binary"
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Signature",
              "path": "Signature",
              "min": 0,
              "max": "*"
            },
            {
              "id": "Signature.type",
              "path": "Signature.type",
              "min": 1,
              "max": "*",
              "type": [
                {
                  "code": "Coding"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "preferred",
                "description": "An indication of the reason that an entity signed the object",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/signature-type"
                }
              }
            },
            {
              "id": "Signature.when",
              "path": "Signature.when",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "instant"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Signature.who[x]",
              "path": "Signature.who[x]",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Practitioner"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/RelatedPerson"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Patient"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Device"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Organization"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Signature.onBehalfOf[x]",
              "path": "Signature.onBehalfOf[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Practitioner"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/RelatedPerson"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Patient"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Device"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Organization"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Signature.contentType",
              "path": "Signature.contentType",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "The mime type of an attachment. Any valid mime type is allowed.",
                "valueSetUri": "http://www.rfc-editor.org/bcp/bcp13.txt"
              }
            },
            {
              "id": "Signature.blob",
              "path": "Signature.blob",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "base64Binary"
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/SampledData",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "SampledData",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/SampledData",
        "name": "SampledData",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "purpose": "There is a need for a concise way to handle the data produced by devices that sample a physical state at a high frequency.",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "SampledData",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "SampledData",
              "path": "SampledData",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "SampledData.id",
              "path": "SampledData.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "SampledData.extension",
              "path": "SampledData.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "SampledData.origin",
              "path": "SampledData.origin",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "Quantity",
                  "profile": "http://hl7.org/fhir/StructureDefinition/SimpleQuantity"
                }
              ],
              "isSummary": true
            },
            {
              "id": "SampledData.period",
              "path": "SampledData.period",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "SampledData.factor",
              "path": "SampledData.factor",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "defaultValueDecimal": 1,
              "isSummary": true
            },
            {
              "id": "SampledData.lowerLimit",
              "path": "SampledData.lowerLimit",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "SampledData.upperLimit",
              "path": "SampledData.upperLimit",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "SampledData.dimensions",
              "path": "SampledData.dimensions",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "positiveInt"
                }
              ],
              "isSummary": true
            },
            {
              "id": "SampledData.data",
              "path": "SampledData.data",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "SampledData",
              "path": "SampledData",
              "min": 0,
              "max": "*"
            },
            {
              "id": "SampledData.origin",
              "path": "SampledData.origin",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "Quantity",
                  "profile": "http://hl7.org/fhir/StructureDefinition/SimpleQuantity"
                }
              ],
              "isSummary": true
            },
            {
              "id": "SampledData.period",
              "path": "SampledData.period",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "SampledData.factor",
              "path": "SampledData.factor",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "defaultValueDecimal": 1,
              "isSummary": true
            },
            {
              "id": "SampledData.lowerLimit",
              "path": "SampledData.lowerLimit",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "SampledData.upperLimit",
              "path": "SampledData.upperLimit",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "SampledData.dimensions",
              "path": "SampledData.dimensions",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "positiveInt"
                }
              ],
              "isSummary": true
            },
            {
              "id": "SampledData.data",
              "path": "SampledData.data",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Ratio",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Ratio",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Ratio",
        "name": "Ratio",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "purpose": "Need to able to capture ratios for some measurements (titers) and some rates (costs).",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Ratio",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "Ratio",
              "path": "Ratio",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                },
                {
                  "key": "rat-1",
                  "severity": "error",
                  "human": "Numerator and denominator SHALL both be present, or both are absent. If both are absent, there SHALL be some extension present",
                  "expression": "(numerator.empty() xor denominator.exists()) and (numerator.exists() or extension.exists())",
                  "xpath": "(count(f:numerator) = count(f:denominator)) and ((count(f:numerator) > 0) or (count(f:extension) > 0))"
                }
              ]
            },
            {
              "id": "Ratio.id",
              "path": "Ratio.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Ratio.extension",
              "path": "Ratio.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Ratio.numerator",
              "path": "Ratio.numerator",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Quantity"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Ratio.denominator",
              "path": "Ratio.denominator",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Quantity"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Ratio",
              "path": "Ratio",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "rat-1",
                  "severity": "error",
                  "human": "Numerator and denominator SHALL both be present, or both are absent. If both are absent, there SHALL be some extension present",
                  "expression": "(numerator.empty() xor denominator.exists()) and (numerator.exists() or extension.exists())",
                  "xpath": "(count(f:numerator) = count(f:denominator)) and ((count(f:numerator) > 0) or (count(f:extension) > 0))"
                }
              ]
            },
            {
              "id": "Ratio.numerator",
              "path": "Ratio.numerator",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Quantity"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Ratio.denominator",
              "path": "Ratio.denominator",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Quantity"
                }
              ],
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Distance",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Distance",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Distance",
        "name": "Distance",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Distance",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Quantity",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "Distance",
              "path": "Distance",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "qty-3",
                  "severity": "error",
                  "human": "If a code for the unit is present, the system SHALL also be present",
                  "expression": "code.empty() or system.exists()",
                  "xpath": "not(exists(f:code)) or exists(f:system)",
                  "source": "Quantity"
                },
                {
                  "key": "dis-1",
                  "severity": "error",
                  "human": "There SHALL be a code if there is a value and it SHALL be an expression of length.  If system is present, it SHALL be UCUM.",
                  "expression": "(code or value.empty()) and (system.empty() or system = %ucum)",
                  "xpath": "(f:code or not(f:value)) and (not(exists(f:system)) or f:system/@value='http://unitsofmeasure.org')"
                }
              ]
            },
            {
              "id": "Distance.id",
              "path": "Distance.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Distance.extension",
              "path": "Distance.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Distance.value",
              "path": "Distance.value",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.value",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Distance.comparator",
              "path": "Distance.comparator",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.comparator",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "code"
                }
              ],
              "meaningWhenMissing": "If there is no comparator, then there is no modification of the value",
              "isModifier": true,
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "How the Quantity should be understood and represented.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/quantity-comparator"
                }
              }
            },
            {
              "id": "Distance.unit",
              "path": "Distance.unit",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.unit",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Distance.system",
              "path": "Distance.system",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.system",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "uri"
                }
              ],
              "condition": [
                "qty-3"
              ],
              "isSummary": true
            },
            {
              "id": "Distance.code",
              "path": "Distance.code",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.code",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Distance",
              "path": "Distance",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "dis-1",
                  "severity": "error",
                  "human": "There SHALL be a code if there is a value and it SHALL be an expression of length.  If system is present, it SHALL be UCUM.",
                  "expression": "(code or value.empty()) and (system.empty() or system = %ucum)",
                  "xpath": "(f:code or not(f:value)) and (not(exists(f:system)) or f:system/@value='http://unitsofmeasure.org')"
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Age",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Age",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Age",
        "name": "Age",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Age",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Quantity",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "Age",
              "path": "Age",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "qty-3",
                  "severity": "error",
                  "human": "If a code for the unit is present, the system SHALL also be present",
                  "expression": "code.empty() or system.exists()",
                  "xpath": "not(exists(f:code)) or exists(f:system)",
                  "source": "Quantity"
                },
                {
                  "key": "age-1",
                  "severity": "error",
                  "human": "There SHALL be a code if there is a value and it SHALL be an expression of time.  If system is present, it SHALL be UCUM.  If value is present, it SHALL be positive.",
                  "expression": "(code or value.empty()) and (system.empty() or system = %ucum) and (value.empty() or value.toString().contains('.').not())",
                  "xpath": "(f:code or not(f:value)) and (not(exists(f:system)) or f:system/@value='http://unitsofmeasure.org') and not(contains(f:value/@value, '-'))"
                }
              ]
            },
            {
              "id": "Age.id",
              "path": "Age.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Age.extension",
              "path": "Age.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Age.value",
              "path": "Age.value",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.value",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Age.comparator",
              "path": "Age.comparator",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.comparator",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "code"
                }
              ],
              "meaningWhenMissing": "If there is no comparator, then there is no modification of the value",
              "isModifier": true,
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "How the Quantity should be understood and represented.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/quantity-comparator"
                }
              }
            },
            {
              "id": "Age.unit",
              "path": "Age.unit",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.unit",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Age.system",
              "path": "Age.system",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.system",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "uri"
                }
              ],
              "condition": [
                "qty-3"
              ],
              "isSummary": true
            },
            {
              "id": "Age.code",
              "path": "Age.code",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.code",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Age",
              "path": "Age",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "age-1",
                  "severity": "error",
                  "human": "There SHALL be a code if there is a value and it SHALL be an expression of time.  If system is present, it SHALL be UCUM.  If value is present, it SHALL be positive.",
                  "expression": "(code or value.empty()) and (system.empty() or system = %ucum) and (value.empty() or value.toString().contains('.').not())",
                  "xpath": "(f:code or not(f:value)) and (not(exists(f:system)) or f:system/@value='http://unitsofmeasure.org') and not(contains(f:value/@value, '-'))"
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/CodeableConcept",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "CodeableConcept",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/CodeableConcept",
        "name": "CodeableConcept",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "purpose": "This is a common pattern in healthcare - a concept that may be defined by one or more codes from formal definitions including LOINC and SNOMED CT, and/or defined by the provision of text that captures a human sense of the concept.",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "CodeableConcept",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "CodeableConcept",
              "path": "CodeableConcept",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "CodeableConcept.id",
              "path": "CodeableConcept.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "CodeableConcept.extension",
              "path": "CodeableConcept.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "CodeableConcept.coding",
              "path": "CodeableConcept.coding",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Coding"
                }
              ],
              "isSummary": true
            },
            {
              "id": "CodeableConcept.text",
              "path": "CodeableConcept.text",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "CodeableConcept",
              "path": "CodeableConcept",
              "min": 0,
              "max": "*"
            },
            {
              "id": "CodeableConcept.coding",
              "path": "CodeableConcept.coding",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Coding"
                }
              ],
              "isSummary": true
            },
            {
              "id": "CodeableConcept.text",
              "path": "CodeableConcept.text",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Extension",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Extension",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Extension",
        "name": "Extension",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "purpose": "The ability to add extensions in a structured way is what keeps FHIR resources simple.",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Extension",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "Extension",
              "path": "Extension",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                },
                {
                  "key": "ext-1",
                  "severity": "error",
                  "human": "Must have either extensions or value[x], not both",
                  "expression": "extension.exists() != value.exists()",
                  "xpath": "exists(f:extension)!=exists(f:*[starts-with(local-name(.), 'value')])"
                }
              ]
            },
            {
              "id": "Extension.id",
              "path": "Extension.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Extension.extension",
              "path": "Extension.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Extension.url",
              "path": "Extension.url",
              "representation": [
                "xmlAttr"
              ],
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ]
            },
            {
              "id": "Extension.value[x]",
              "path": "Extension.value[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "base64Binary"
                },
                {
                  "code": "boolean"
                },
                {
                  "code": "code"
                },
                {
                  "code": "date"
                },
                {
                  "code": "dateTime"
                },
                {
                  "code": "decimal"
                },
                {
                  "code": "id"
                },
                {
                  "code": "instant"
                },
                {
                  "code": "integer"
                },
                {
                  "code": "markdown"
                },
                {
                  "code": "oid"
                },
                {
                  "code": "positiveInt"
                },
                {
                  "code": "string"
                },
                {
                  "code": "time"
                },
                {
                  "code": "unsignedInt"
                },
                {
                  "code": "uri"
                },
                {
                  "code": "Address"
                },
                {
                  "code": "Age"
                },
                {
                  "code": "Annotation"
                },
                {
                  "code": "Attachment"
                },
                {
                  "code": "CodeableConcept"
                },
                {
                  "code": "Coding"
                },
                {
                  "code": "ContactPoint"
                },
                {
                  "code": "Count"
                },
                {
                  "code": "Distance"
                },
                {
                  "code": "Duration"
                },
                {
                  "code": "HumanName"
                },
                {
                  "code": "Identifier"
                },
                {
                  "code": "Money"
                },
                {
                  "code": "Period"
                },
                {
                  "code": "Quantity"
                },
                {
                  "code": "Range"
                },
                {
                  "code": "Ratio"
                },
                {
                  "code": "Reference"
                },
                {
                  "code": "SampledData"
                },
                {
                  "code": "Signature"
                },
                {
                  "code": "Timing"
                },
                {
                  "code": "Meta"
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Extension",
              "path": "Extension",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "ext-1",
                  "severity": "error",
                  "human": "Must have either extensions or value[x], not both",
                  "expression": "extension.exists() != value.exists()",
                  "xpath": "exists(f:extension)!=exists(f:*[starts-with(local-name(.), 'value')])"
                }
              ]
            },
            {
              "id": "Extension.url",
              "path": "Extension.url",
              "representation": [
                "xmlAttr"
              ],
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ]
            },
            {
              "id": "Extension.value[x]",
              "path": "Extension.value[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "base64Binary"
                },
                {
                  "code": "boolean"
                },
                {
                  "code": "code"
                },
                {
                  "code": "date"
                },
                {
                  "code": "dateTime"
                },
                {
                  "code": "decimal"
                },
                {
                  "code": "id"
                },
                {
                  "code": "instant"
                },
                {
                  "code": "integer"
                },
                {
                  "code": "markdown"
                },
                {
                  "code": "oid"
                },
                {
                  "code": "positiveInt"
                },
                {
                  "code": "string"
                },
                {
                  "code": "time"
                },
                {
                  "code": "unsignedInt"
                },
                {
                  "code": "uri"
                },
                {
                  "code": "Address"
                },
                {
                  "code": "Age"
                },
                {
                  "code": "Annotation"
                },
                {
                  "code": "Attachment"
                },
                {
                  "code": "CodeableConcept"
                },
                {
                  "code": "Coding"
                },
                {
                  "code": "ContactPoint"
                },
                {
                  "code": "Count"
                },
                {
                  "code": "Distance"
                },
                {
                  "code": "Duration"
                },
                {
                  "code": "HumanName"
                },
                {
                  "code": "Identifier"
                },
                {
                  "code": "Money"
                },
                {
                  "code": "Period"
                },
                {
                  "code": "Quantity"
                },
                {
                  "code": "Range"
                },
                {
                  "code": "Ratio"
                },
                {
                  "code": "Reference"
                },
                {
                  "code": "SampledData"
                },
                {
                  "code": "Signature"
                },
                {
                  "code": "Timing"
                },
                {
                  "code": "Meta"
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/BackboneElement",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "BackboneElement",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/BackboneElement",
        "name": "BackboneElement",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": true,
        "type": "BackboneElement",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "BackboneElement",
              "path": "BackboneElement",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "BackboneElement.id",
              "path": "BackboneElement.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "BackboneElement.extension",
              "path": "BackboneElement.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "BackboneElement.modifierExtension",
              "path": "BackboneElement.modifierExtension",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Extension"
                }
              ],
              "isModifier": true,
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "BackboneElement",
              "path": "BackboneElement",
              "min": 0,
              "max": "*"
            },
            {
              "id": "BackboneElement.modifierExtension",
              "path": "BackboneElement.modifierExtension",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Extension"
                }
              ],
              "isModifier": true,
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Narrative",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Narrative",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Narrative",
        "name": "Narrative",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Narrative",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "Narrative",
              "path": "Narrative",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "Narrative.id",
              "path": "Narrative.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Narrative.extension",
              "path": "Narrative.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Narrative.status",
              "path": "Narrative.status",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "binding": {
                "strength": "required",
                "description": "The status of a resource narrative",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/narrative-status"
                }
              }
            },
            {
              "id": "Narrative.div",
              "path": "Narrative.div",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "xhtml"
                }
              ],
              "constraint": [
                {
                  "key": "txt-1",
                  "severity": "error",
                  "human": "The narrative SHALL contain only the basic html formatting elements and attributes described in chapters 7-11 (except section 4 of chapter 9) and 15 of the HTML 4.0 standard, <a> elements (either name or href), images and internally contained style attributes",
                  "expression": "htmlchecks()",
                  "xpath": "not(descendant-or-self::*[not(local-name(.)=('a', 'abbr', 'acronym', 'b', 'big', 'blockquote', 'br', 'caption', 'cite', 'code', 'col', 'colgroup', 'dd', 'dfn', 'div', 'dl', 'dt', 'em', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'i', 'img', 'li', 'ol', 'p', 'pre', 'q', 'samp', 'small', 'span', 'strong', 'sub', 'sup', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'tt', 'ul', 'var'))]) and not(descendant-or-self::*/@*[not(name(.)=('abbr', 'accesskey', 'align', 'alt', 'axis', 'bgcolor', 'border', 'cellhalign', 'cellpadding', 'cellspacing', 'cellvalign', 'char', 'charoff', 'charset', 'cite', 'class', 'colspan', 'compact', 'coords', 'dir', 'frame', 'headers', 'height', 'href', 'hreflang', 'hspace', 'id', 'lang', 'longdesc', 'name', 'nowrap', 'rel', 'rev', 'rowspan', 'rules', 'scope', 'shape', 'span', 'src', 'start', 'style', 'summary', 'tabindex', 'title', 'type', 'valign', 'value', 'vspace', 'width'))])"
                },
                {
                  "key": "txt-2",
                  "severity": "error",
                  "human": "The narrative SHALL have some non-whitespace content",
                  "expression": "htmlchecks()",
                  "xpath": "descendant::text()[normalize-space(.)!=''] or descendant::h:img[@src]"
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Narrative",
              "path": "Narrative",
              "min": 0,
              "max": "*"
            },
            {
              "id": "Narrative.status",
              "path": "Narrative.status",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "binding": {
                "strength": "required",
                "description": "The status of a resource narrative",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/narrative-status"
                }
              }
            },
            {
              "id": "Narrative.div",
              "path": "Narrative.div",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "xhtml"
                }
              ],
              "constraint": [
                {
                  "key": "txt-1",
                  "severity": "error",
                  "human": "The narrative SHALL contain only the basic html formatting elements and attributes described in chapters 7-11 (except section 4 of chapter 9) and 15 of the HTML 4.0 standard, <a> elements (either name or href), images and internally contained style attributes",
                  "expression": "htmlchecks()",
                  "xpath": "not(descendant-or-self::*[not(local-name(.)=('a', 'abbr', 'acronym', 'b', 'big', 'blockquote', 'br', 'caption', 'cite', 'code', 'col', 'colgroup', 'dd', 'dfn', 'div', 'dl', 'dt', 'em', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'i', 'img', 'li', 'ol', 'p', 'pre', 'q', 'samp', 'small', 'span', 'strong', 'sub', 'sup', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'tt', 'ul', 'var'))]) and not(descendant-or-self::*/@*[not(name(.)=('abbr', 'accesskey', 'align', 'alt', 'axis', 'bgcolor', 'border', 'cellhalign', 'cellpadding', 'cellspacing', 'cellvalign', 'char', 'charoff', 'charset', 'cite', 'class', 'colspan', 'compact', 'coords', 'dir', 'frame', 'headers', 'height', 'href', 'hreflang', 'hspace', 'id', 'lang', 'longdesc', 'name', 'nowrap', 'rel', 'rev', 'rowspan', 'rules', 'scope', 'shape', 'span', 'src', 'start', 'style', 'summary', 'tabindex', 'title', 'type', 'valign', 'value', 'vspace', 'width'))])"
                },
                {
                  "key": "txt-2",
                  "severity": "error",
                  "human": "The narrative SHALL have some non-whitespace content",
                  "expression": "htmlchecks()",
                  "xpath": "descendant::text()[normalize-space(.)!=''] or descendant::h:img[@src]"
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Element",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Element",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Element",
        "name": "Element",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": true,
        "type": "Element",
        "snapshot": {
          "element": [
            {
              "id": "Element",
              "path": "Element",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div"
                }
              ]
            },
            {
              "id": "Element.id",
              "path": "Element.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Element.extension",
              "path": "Element.extension",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Extension"
                }
              ]
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Element",
              "path": "Element",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div"
                }
              ]
            },
            {
              "id": "Element.id",
              "path": "Element.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Element.extension",
              "path": "Element.extension",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Extension"
                }
              ]
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Meta",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Meta",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Meta",
        "name": "Meta",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Meta",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "Meta",
              "path": "Meta",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "Meta.id",
              "path": "Meta.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Meta.extension",
              "path": "Meta.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Meta.versionId",
              "path": "Meta.versionId",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "id"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Meta.lastUpdated",
              "path": "Meta.lastUpdated",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "instant"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Meta.profile",
              "path": "Meta.profile",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Meta.security",
              "path": "Meta.security",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Coding"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "extensible",
                "description": "Security Labels from the Healthcare Privacy and Security Classification System.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/security-labels"
                }
              }
            },
            {
              "id": "Meta.tag",
              "path": "Meta.tag",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Coding"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "example",
                "description": "Codes that represent various types of tags, commonly workflow-related; e.g. \"Needs review by Dr. Jones\"",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/common-tags"
                }
              }
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Meta",
              "path": "Meta",
              "min": 0,
              "max": "*"
            },
            {
              "id": "Meta.versionId",
              "path": "Meta.versionId",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "id"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Meta.lastUpdated",
              "path": "Meta.lastUpdated",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "instant"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Meta.profile",
              "path": "Meta.profile",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Meta.security",
              "path": "Meta.security",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Coding"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "extensible",
                "description": "Security Labels from the Healthcare Privacy and Security Classification System.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/security-labels"
                }
              }
            },
            {
              "id": "Meta.tag",
              "path": "Meta.tag",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Coding"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "example",
                "description": "Codes that represent various types of tags, commonly workflow-related; e.g. \"Needs review by Dr. Jones\"",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/common-tags"
                }
              }
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Address",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Address",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Address",
        "name": "Address",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "purpose": "Need to be able to record postal addresses, along with notes about their use.",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Address",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "Address",
              "path": "Address",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "Address.id",
              "path": "Address.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Address.extension",
              "path": "Address.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Address.use",
              "path": "Address.use",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueCode": "home"
                }
              ],
              "isModifier": true,
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "The use of an address",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/address-use"
                }
              }
            },
            {
              "id": "Address.type",
              "path": "Address.type",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueCode": "both"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "The type of an address (physical / postal)",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/address-type"
                }
              }
            },
            {
              "id": "Address.text",
              "path": "Address.text",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueString": "137 Nowhere Street, Erewhon 9132"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Address.line",
              "path": "Address.line",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "string"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueString": "137 Nowhere Street"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Address.city",
              "path": "Address.city",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueString": "Erewhon"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Address.district",
              "path": "Address.district",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueString": "Madison"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Address.state",
              "path": "Address.state",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Address.postalCode",
              "path": "Address.postalCode",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueString": "9132"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Address.country",
              "path": "Address.country",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Address.period",
              "path": "Address.period",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Period"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valuePeriod": {
                    "start": "2010-03-23",
                    "end": "2010-07-01"
                  }
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Address",
              "path": "Address",
              "min": 0,
              "max": "*"
            },
            {
              "id": "Address.use",
              "path": "Address.use",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueCode": "home"
                }
              ],
              "isModifier": true,
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "The use of an address",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/address-use"
                }
              }
            },
            {
              "id": "Address.type",
              "path": "Address.type",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueCode": "both"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "The type of an address (physical / postal)",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/address-type"
                }
              }
            },
            {
              "id": "Address.text",
              "path": "Address.text",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueString": "137 Nowhere Street, Erewhon 9132"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Address.line",
              "path": "Address.line",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "string"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueString": "137 Nowhere Street"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Address.city",
              "path": "Address.city",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueString": "Erewhon"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Address.district",
              "path": "Address.district",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueString": "Madison"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Address.state",
              "path": "Address.state",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Address.postalCode",
              "path": "Address.postalCode",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valueString": "9132"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Address.country",
              "path": "Address.country",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Address.period",
              "path": "Address.period",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Period"
                }
              ],
              "example": [
                {
                  "label": "General",
                  "valuePeriod": {
                    "start": "2010-03-23",
                    "end": "2010-07-01"
                  }
                }
              ],
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/TriggerDefinition",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "TriggerDefinition",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/TriggerDefinition",
        "name": "TriggerDefinition",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "TriggerDefinition",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "TriggerDefinition",
              "path": "TriggerDefinition",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "TriggerDefinition.id",
              "path": "TriggerDefinition.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "TriggerDefinition.extension",
              "path": "TriggerDefinition.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "TriggerDefinition.type",
              "path": "TriggerDefinition.type",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "The type of trigger",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/trigger-type"
                }
              }
            },
            {
              "id": "TriggerDefinition.eventName",
              "path": "TriggerDefinition.eventName",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "TriggerDefinition.eventTiming[x]",
              "path": "TriggerDefinition.eventTiming[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Timing"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Schedule"
                },
                {
                  "code": "date"
                },
                {
                  "code": "dateTime"
                }
              ],
              "isSummary": true
            },
            {
              "id": "TriggerDefinition.eventData",
              "path": "TriggerDefinition.eventData",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "DataRequirement"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "TriggerDefinition",
              "path": "TriggerDefinition",
              "min": 0,
              "max": "*"
            },
            {
              "id": "TriggerDefinition.type",
              "path": "TriggerDefinition.type",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "The type of trigger",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/trigger-type"
                }
              }
            },
            {
              "id": "TriggerDefinition.eventName",
              "path": "TriggerDefinition.eventName",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "TriggerDefinition.eventTiming[x]",
              "path": "TriggerDefinition.eventTiming[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Timing"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Schedule"
                },
                {
                  "code": "date"
                },
                {
                  "code": "dateTime"
                }
              ],
              "isSummary": true
            },
            {
              "id": "TriggerDefinition.eventData",
              "path": "TriggerDefinition.eventData",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "DataRequirement"
                }
              ],
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Contributor",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Contributor",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Contributor",
        "name": "Contributor",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "purpose": "Need to track contributor information in the same way across multiple resources.",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Contributor",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "Contributor",
              "path": "Contributor",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "Contributor.id",
              "path": "Contributor.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Contributor.extension",
              "path": "Contributor.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Contributor.type",
              "path": "Contributor.type",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "The type of contributor",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/contributor-type"
                }
              }
            },
            {
              "id": "Contributor.name",
              "path": "Contributor.name",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Contributor.contact",
              "path": "Contributor.contact",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "ContactDetail"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Contributor",
              "path": "Contributor",
              "min": 0,
              "max": "*"
            },
            {
              "id": "Contributor.type",
              "path": "Contributor.type",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "The type of contributor",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/contributor-type"
                }
              }
            },
            {
              "id": "Contributor.name",
              "path": "Contributor.name",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Contributor.contact",
              "path": "Contributor.contact",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "ContactDetail"
                }
              ],
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/DataRequirement",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "DataRequirement",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/DataRequirement",
        "name": "DataRequirement",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "DataRequirement",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "DataRequirement",
              "path": "DataRequirement",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "DataRequirement.id",
              "path": "DataRequirement.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "DataRequirement.extension",
              "path": "DataRequirement.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "DataRequirement.type",
              "path": "DataRequirement.type",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "Either an abstract type, a resource or a data type.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/all-types"
                }
              }
            },
            {
              "id": "DataRequirement.profile",
              "path": "DataRequirement.profile",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DataRequirement.mustSupport",
              "path": "DataRequirement.mustSupport",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DataRequirement.codeFilter",
              "path": "DataRequirement.codeFilter",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Element"
                }
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DataRequirement.codeFilter.id",
              "path": "DataRequirement.codeFilter.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "DataRequirement.codeFilter.extension",
              "path": "DataRequirement.codeFilter.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "DataRequirement.codeFilter.path",
              "path": "DataRequirement.codeFilter.path",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DataRequirement.codeFilter.valueSet[x]",
              "path": "DataRequirement.codeFilter.valueSet[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/ValueSet"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DataRequirement.codeFilter.valueCode",
              "path": "DataRequirement.codeFilter.valueCode",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DataRequirement.codeFilter.valueCoding",
              "path": "DataRequirement.codeFilter.valueCoding",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Coding"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DataRequirement.codeFilter.valueCodeableConcept",
              "path": "DataRequirement.codeFilter.valueCodeableConcept",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "CodeableConcept"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DataRequirement.dateFilter",
              "path": "DataRequirement.dateFilter",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Element"
                }
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DataRequirement.dateFilter.id",
              "path": "DataRequirement.dateFilter.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "DataRequirement.dateFilter.extension",
              "path": "DataRequirement.dateFilter.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "DataRequirement.dateFilter.path",
              "path": "DataRequirement.dateFilter.path",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DataRequirement.dateFilter.value[x]",
              "path": "DataRequirement.dateFilter.value[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "dateTime"
                },
                {
                  "code": "Period"
                },
                {
                  "code": "Duration"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "DataRequirement",
              "path": "DataRequirement",
              "min": 0,
              "max": "*"
            },
            {
              "id": "DataRequirement.type",
              "path": "DataRequirement.type",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "Either an abstract type, a resource or a data type.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/all-types"
                }
              }
            },
            {
              "id": "DataRequirement.profile",
              "path": "DataRequirement.profile",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DataRequirement.mustSupport",
              "path": "DataRequirement.mustSupport",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DataRequirement.codeFilter",
              "path": "DataRequirement.codeFilter",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Element"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DataRequirement.codeFilter.path",
              "path": "DataRequirement.codeFilter.path",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DataRequirement.codeFilter.valueSet[x]",
              "path": "DataRequirement.codeFilter.valueSet[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/ValueSet"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DataRequirement.codeFilter.valueCode",
              "path": "DataRequirement.codeFilter.valueCode",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DataRequirement.codeFilter.valueCoding",
              "path": "DataRequirement.codeFilter.valueCoding",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Coding"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DataRequirement.codeFilter.valueCodeableConcept",
              "path": "DataRequirement.codeFilter.valueCodeableConcept",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "CodeableConcept"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DataRequirement.dateFilter",
              "path": "DataRequirement.dateFilter",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Element"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DataRequirement.dateFilter.path",
              "path": "DataRequirement.dateFilter.path",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DataRequirement.dateFilter.value[x]",
              "path": "DataRequirement.dateFilter.value[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "dateTime"
                },
                {
                  "code": "Period"
                },
                {
                  "code": "Duration"
                }
              ],
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/RelatedArtifact",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "RelatedArtifact",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/RelatedArtifact",
        "name": "RelatedArtifact",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "purpose": "Knowledge resources must be able to provide enough information for consumers of the content (and/or interventions or results produced by the content) to be able to determine and understand the justification for and evidence in support of the content.",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "RelatedArtifact",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "RelatedArtifact",
              "path": "RelatedArtifact",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "RelatedArtifact.id",
              "path": "RelatedArtifact.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "RelatedArtifact.extension",
              "path": "RelatedArtifact.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "RelatedArtifact.type",
              "path": "RelatedArtifact.type",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "The type of relationship to the related artifact",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/related-artifact-type"
                }
              }
            },
            {
              "id": "RelatedArtifact.display",
              "path": "RelatedArtifact.display",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "RelatedArtifact.citation",
              "path": "RelatedArtifact.citation",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "RelatedArtifact.url",
              "path": "RelatedArtifact.url",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "isSummary": true
            },
            {
              "id": "RelatedArtifact.document",
              "path": "RelatedArtifact.document",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Attachment"
                }
              ],
              "isSummary": true
            },
            {
              "id": "RelatedArtifact.resource",
              "path": "RelatedArtifact.resource",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Resource"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "RelatedArtifact",
              "path": "RelatedArtifact",
              "min": 0,
              "max": "*"
            },
            {
              "id": "RelatedArtifact.type",
              "path": "RelatedArtifact.type",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "The type of relationship to the related artifact",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/related-artifact-type"
                }
              }
            },
            {
              "id": "RelatedArtifact.display",
              "path": "RelatedArtifact.display",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "RelatedArtifact.citation",
              "path": "RelatedArtifact.citation",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "RelatedArtifact.url",
              "path": "RelatedArtifact.url",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "isSummary": true
            },
            {
              "id": "RelatedArtifact.document",
              "path": "RelatedArtifact.document",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Attachment"
                }
              ],
              "isSummary": true
            },
            {
              "id": "RelatedArtifact.resource",
              "path": "RelatedArtifact.resource",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/Resource"
                }
              ],
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/ContactDetail",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "ContactDetail",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/ContactDetail",
        "name": "ContactDetail",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "purpose": "Need to track contact information in the same way across multiple resources.",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "ContactDetail",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "ContactDetail",
              "path": "ContactDetail",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "ContactDetail.id",
              "path": "ContactDetail.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "ContactDetail.extension",
              "path": "ContactDetail.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "ContactDetail.name",
              "path": "ContactDetail.name",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ContactDetail.telecom",
              "path": "ContactDetail.telecom",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "ContactPoint"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "ContactDetail",
              "path": "ContactDetail",
              "min": 0,
              "max": "*"
            },
            {
              "id": "ContactDetail.name",
              "path": "ContactDetail.name",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ContactDetail.telecom",
              "path": "ContactDetail.telecom",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "ContactPoint"
                }
              ],
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/HumanName",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "HumanName",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/HumanName",
        "name": "HumanName",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "purpose": "Need to be able to record names, along with notes about their use.",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "HumanName",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "HumanName",
              "path": "HumanName",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "HumanName.id",
              "path": "HumanName.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "HumanName.extension",
              "path": "HumanName.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "HumanName.use",
              "path": "HumanName.use",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isModifier": true,
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "The use of a human name",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/name-use"
                }
              }
            },
            {
              "id": "HumanName.text",
              "path": "HumanName.text",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "HumanName.family",
              "path": "HumanName.family",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "HumanName.given",
              "path": "HumanName.given",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "HumanName.prefix",
              "path": "HumanName.prefix",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "HumanName.suffix",
              "path": "HumanName.suffix",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "HumanName.period",
              "path": "HumanName.period",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Period"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "HumanName",
              "path": "HumanName",
              "min": 0,
              "max": "*"
            },
            {
              "id": "HumanName.use",
              "path": "HumanName.use",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isModifier": true,
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "The use of a human name",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/name-use"
                }
              }
            },
            {
              "id": "HumanName.text",
              "path": "HumanName.text",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "HumanName.family",
              "path": "HumanName.family",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "HumanName.given",
              "path": "HumanName.given",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "HumanName.prefix",
              "path": "HumanName.prefix",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "HumanName.suffix",
              "path": "HumanName.suffix",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "HumanName.period",
              "path": "HumanName.period",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Period"
                }
              ],
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/ContactPoint",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "ContactPoint",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/ContactPoint",
        "name": "ContactPoint",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "purpose": "Need to track phone, fax, mobile, sms numbers, email addresses, twitter tags, etc.",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "ContactPoint",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "ContactPoint",
              "path": "ContactPoint",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                },
                {
                  "key": "cpt-2",
                  "severity": "error",
                  "human": "A system is required if a value is provided.",
                  "expression": "value.empty() or system.exists()",
                  "xpath": "not(exists(f:value)) or exists(f:system)"
                }
              ]
            },
            {
              "id": "ContactPoint.id",
              "path": "ContactPoint.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "ContactPoint.extension",
              "path": "ContactPoint.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "ContactPoint.system",
              "path": "ContactPoint.system",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "condition": [
                "cpt-2"
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "Telecommunications form for contact point",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/contact-point-system"
                }
              }
            },
            {
              "id": "ContactPoint.value",
              "path": "ContactPoint.value",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ContactPoint.use",
              "path": "ContactPoint.use",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isModifier": true,
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "Use of contact point",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/contact-point-use"
                }
              }
            },
            {
              "id": "ContactPoint.rank",
              "path": "ContactPoint.rank",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "positiveInt"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ContactPoint.period",
              "path": "ContactPoint.period",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Period"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "ContactPoint",
              "path": "ContactPoint",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "cpt-2",
                  "severity": "error",
                  "human": "A system is required if a value is provided.",
                  "expression": "value.empty() or system.exists()",
                  "xpath": "not(exists(f:value)) or exists(f:system)"
                }
              ]
            },
            {
              "id": "ContactPoint.system",
              "path": "ContactPoint.system",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "condition": [
                "cpt-2"
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "Telecommunications form for contact point",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/contact-point-system"
                }
              }
            },
            {
              "id": "ContactPoint.value",
              "path": "ContactPoint.value",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ContactPoint.use",
              "path": "ContactPoint.use",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isModifier": true,
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "Use of contact point",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/contact-point-use"
                }
              }
            },
            {
              "id": "ContactPoint.rank",
              "path": "ContactPoint.rank",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "positiveInt"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ContactPoint.period",
              "path": "ContactPoint.period",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Period"
                }
              ],
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/UsageContext",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "UsageContext",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/UsageContext",
        "name": "UsageContext",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "purpose": "Consumers of the resource must be able to determine the intended applicability for the resource. Ideally, this information would be used programmatically to determine when and how it should be incorporated or exposed.",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "UsageContext",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "UsageContext",
              "path": "UsageContext",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "UsageContext.id",
              "path": "UsageContext.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "UsageContext.extension",
              "path": "UsageContext.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "UsageContext.code",
              "path": "UsageContext.code",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "Coding"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "extensible",
                "description": "A code the specifies a type of context being specified by a usage context",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/usage-context-type"
                }
              }
            },
            {
              "id": "UsageContext.value[x]",
              "path": "UsageContext.value[x]",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "CodeableConcept"
                },
                {
                  "code": "Quantity"
                },
                {
                  "code": "Range"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "UsageContext",
              "path": "UsageContext",
              "min": 0,
              "max": "*"
            },
            {
              "id": "UsageContext.code",
              "path": "UsageContext.code",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "Coding"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "extensible",
                "description": "A code the specifies a type of context being specified by a usage context",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/usage-context-type"
                }
              }
            },
            {
              "id": "UsageContext.value[x]",
              "path": "UsageContext.value[x]",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "CodeableConcept"
                },
                {
                  "code": "Quantity"
                },
                {
                  "code": "Range"
                }
              ],
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/Timing",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "Timing",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/Timing",
        "name": "Timing",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "purpose": "Need to able to track proposed timing schedules. There are several different ways to do this: one or more specified times, a simple rules like three times a day, or  before/after meals.",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Timing",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "Timing",
              "path": "Timing",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "Timing.id",
              "path": "Timing.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Timing.extension",
              "path": "Timing.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Timing.event",
              "path": "Timing.event",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "dateTime"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat",
              "path": "Timing.repeat",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Element"
                }
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                },
                {
                  "key": "tim-9",
                  "severity": "error",
                  "human": "If there's an offset, there must be a when",
                  "expression": "offset.empty() or when.exists()",
                  "xpath": "not(exists(f:offset)) or exists(f:when)"
                },
                {
                  "key": "tim-5",
                  "severity": "error",
                  "human": "period SHALL be a non-negative value",
                  "expression": "period.exists() implies period >= 0",
                  "xpath": "f:period/@value >= 0 or not(f:period/@value)"
                },
                {
                  "key": "tim-6",
                  "severity": "error",
                  "human": "If there's a periodMax, there must be a period",
                  "expression": "periodMax.empty() or period.exists()",
                  "xpath": "not(exists(f:periodMax)) or exists(f:period)"
                },
                {
                  "key": "tim-7",
                  "severity": "error",
                  "human": "If there's a durationMax, there must be a duration",
                  "expression": "durationMax.empty() or duration.exists()",
                  "xpath": "not(exists(f:durationMax)) or exists(f:duration)"
                },
                {
                  "key": "tim-8",
                  "severity": "error",
                  "human": "If there's a countMax, there must be a count",
                  "expression": "countMax.empty() or count.exists()",
                  "xpath": "not(exists(f:countMax)) or exists(f:count)"
                },
                {
                  "key": "tim-1",
                  "severity": "error",
                  "human": "if there's a duration, there needs to be duration units",
                  "expression": "duration.empty() or durationUnit.exists()",
                  "xpath": "not(exists(f:duration)) or exists(f:durationUnit)"
                },
                {
                  "key": "tim-10",
                  "severity": "error",
                  "human": "If there's a timeOfDay, there cannot be be a when, a frequency, or a period",
                  "expression": "timeOfDay.exists() implies (when.empty() and frequency.empty() and period.empty())",
                  "xpath": "not(exists(f:timeofDay)) or (not(exists(f:when)) and not(exists(f:frequency)) and not (exists(f:period)))"
                },
                {
                  "key": "tim-11",
                  "severity": "error",
                  "human": "If there's a dayOfWeek, there cannot be be a frequency, or a period",
                  "expression": "dayOfWeek.exists() implies (frequency.empty() and period.empty())",
                  "xpath": "not(exists(f:timeofDay)) or (not(exists(f:frequency)) and not (exists(f:period)))"
                },
                {
                  "key": "tim-2",
                  "severity": "error",
                  "human": "if there's a period, there needs to be period units",
                  "expression": "period.empty() or periodUnit.exists()",
                  "xpath": "not(exists(f:period)) or exists(f:periodUnit)"
                },
                {
                  "key": "tim-3",
                  "severity": "error",
                  "human": "Either frequency or when can exist, not both",
                  "expression": "((period or frequency) and when).not()",
                  "xpath": "not((f:period or f:frequency) and f:when)"
                },
                {
                  "key": "tim-4",
                  "severity": "error",
                  "human": "duration SHALL be a non-negative value",
                  "expression": "duration.exists() implies duration >= 0",
                  "xpath": "f:duration/@value >= 0 or not(f:duration/@value)"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat.id",
              "path": "Timing.repeat.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Timing.repeat.extension",
              "path": "Timing.repeat.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Timing.repeat.bounds[x]",
              "path": "Timing.repeat.bounds[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Duration"
                },
                {
                  "code": "Range"
                },
                {
                  "code": "Period"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat.count",
              "path": "Timing.repeat.count",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "integer"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat.countMax",
              "path": "Timing.repeat.countMax",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "integer"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat.duration",
              "path": "Timing.repeat.duration",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat.durationMax",
              "path": "Timing.repeat.durationMax",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat.durationUnit",
              "path": "Timing.repeat.durationUnit",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "A unit of time (units from UCUM).",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/units-of-time"
                }
              }
            },
            {
              "id": "Timing.repeat.frequency",
              "path": "Timing.repeat.frequency",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "integer"
                }
              ],
              "defaultValueInteger": 1,
              "isSummary": true
            },
            {
              "id": "Timing.repeat.frequencyMax",
              "path": "Timing.repeat.frequencyMax",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "integer"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat.period",
              "path": "Timing.repeat.period",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat.periodMax",
              "path": "Timing.repeat.periodMax",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat.periodUnit",
              "path": "Timing.repeat.periodUnit",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "A unit of time (units from UCUM).",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/units-of-time"
                }
              }
            },
            {
              "id": "Timing.repeat.dayOfWeek",
              "path": "Timing.repeat.dayOfWeek",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/days-of-week"
                }
              }
            },
            {
              "id": "Timing.repeat.timeOfDay",
              "path": "Timing.repeat.timeOfDay",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "time"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat.when",
              "path": "Timing.repeat.when",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "Real world event that the relating to the schedule.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/event-timing"
                }
              }
            },
            {
              "id": "Timing.repeat.offset",
              "path": "Timing.repeat.offset",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "unsignedInt"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.code",
              "path": "Timing.code",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "CodeableConcept"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "preferred",
                "description": "Code for a known / defined timing pattern.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/timing-abbreviation"
                }
              }
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Timing",
              "path": "Timing",
              "min": 0,
              "max": "*"
            },
            {
              "id": "Timing.event",
              "path": "Timing.event",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "dateTime"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat",
              "path": "Timing.repeat",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Element"
                }
              ],
              "constraint": [
                {
                  "key": "tim-9",
                  "severity": "error",
                  "human": "If there's an offset, there must be a when",
                  "expression": "offset.empty() or when.exists()",
                  "xpath": "not(exists(f:offset)) or exists(f:when)"
                },
                {
                  "key": "tim-5",
                  "severity": "error",
                  "human": "period SHALL be a non-negative value",
                  "expression": "period.exists() implies period >= 0",
                  "xpath": "f:period/@value >= 0 or not(f:period/@value)"
                },
                {
                  "key": "tim-6",
                  "severity": "error",
                  "human": "If there's a periodMax, there must be a period",
                  "expression": "periodMax.empty() or period.exists()",
                  "xpath": "not(exists(f:periodMax)) or exists(f:period)"
                },
                {
                  "key": "tim-7",
                  "severity": "error",
                  "human": "If there's a durationMax, there must be a duration",
                  "expression": "durationMax.empty() or duration.exists()",
                  "xpath": "not(exists(f:durationMax)) or exists(f:duration)"
                },
                {
                  "key": "tim-8",
                  "severity": "error",
                  "human": "If there's a countMax, there must be a count",
                  "expression": "countMax.empty() or count.exists()",
                  "xpath": "not(exists(f:countMax)) or exists(f:count)"
                },
                {
                  "key": "tim-1",
                  "severity": "error",
                  "human": "if there's a duration, there needs to be duration units",
                  "expression": "duration.empty() or durationUnit.exists()",
                  "xpath": "not(exists(f:duration)) or exists(f:durationUnit)"
                },
                {
                  "key": "tim-10",
                  "severity": "error",
                  "human": "If there's a timeOfDay, there cannot be be a when, a frequency, or a period",
                  "expression": "timeOfDay.exists() implies (when.empty() and frequency.empty() and period.empty())",
                  "xpath": "not(exists(f:timeofDay)) or (not(exists(f:when)) and not(exists(f:frequency)) and not (exists(f:period)))"
                },
                {
                  "key": "tim-11",
                  "severity": "error",
                  "human": "If there's a dayOfWeek, there cannot be be a frequency, or a period",
                  "expression": "dayOfWeek.exists() implies (frequency.empty() and period.empty())",
                  "xpath": "not(exists(f:timeofDay)) or (not(exists(f:frequency)) and not (exists(f:period)))"
                },
                {
                  "key": "tim-2",
                  "severity": "error",
                  "human": "if there's a period, there needs to be period units",
                  "expression": "period.empty() or periodUnit.exists()",
                  "xpath": "not(exists(f:period)) or exists(f:periodUnit)"
                },
                {
                  "key": "tim-3",
                  "severity": "error",
                  "human": "Either frequency or when can exist, not both",
                  "expression": "((period or frequency) and when).not()",
                  "xpath": "not((f:period or f:frequency) and f:when)"
                },
                {
                  "key": "tim-4",
                  "severity": "error",
                  "human": "duration SHALL be a non-negative value",
                  "expression": "duration.exists() implies duration >= 0",
                  "xpath": "f:duration/@value >= 0 or not(f:duration/@value)"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat.bounds[x]",
              "path": "Timing.repeat.bounds[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Duration"
                },
                {
                  "code": "Range"
                },
                {
                  "code": "Period"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat.count",
              "path": "Timing.repeat.count",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "integer"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat.countMax",
              "path": "Timing.repeat.countMax",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "integer"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat.duration",
              "path": "Timing.repeat.duration",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat.durationMax",
              "path": "Timing.repeat.durationMax",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat.durationUnit",
              "path": "Timing.repeat.durationUnit",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "A unit of time (units from UCUM).",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/units-of-time"
                }
              }
            },
            {
              "id": "Timing.repeat.frequency",
              "path": "Timing.repeat.frequency",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "integer"
                }
              ],
              "defaultValueInteger": 1,
              "isSummary": true
            },
            {
              "id": "Timing.repeat.frequencyMax",
              "path": "Timing.repeat.frequencyMax",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "integer"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat.period",
              "path": "Timing.repeat.period",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat.periodMax",
              "path": "Timing.repeat.periodMax",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat.periodUnit",
              "path": "Timing.repeat.periodUnit",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "A unit of time (units from UCUM).",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/units-of-time"
                }
              }
            },
            {
              "id": "Timing.repeat.dayOfWeek",
              "path": "Timing.repeat.dayOfWeek",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/days-of-week"
                }
              }
            },
            {
              "id": "Timing.repeat.timeOfDay",
              "path": "Timing.repeat.timeOfDay",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "time"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.repeat.when",
              "path": "Timing.repeat.when",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "Real world event that the relating to the schedule.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/event-timing"
                }
              }
            },
            {
              "id": "Timing.repeat.offset",
              "path": "Timing.repeat.offset",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "unsignedInt"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Timing.code",
              "path": "Timing.code",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "CodeableConcept"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "preferred",
                "description": "Code for a known / defined timing pattern.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/timing-abbreviation"
                }
              }
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/ElementDefinition",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "ElementDefinition",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/ElementDefinition",
        "name": "ElementDefinition",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "ElementDefinition",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "ElementDefinition",
              "path": "ElementDefinition",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                },
                {
                  "key": "eld-2",
                  "severity": "error",
                  "human": "Min <= Max",
                  "expression": "min.empty() or max.empty() or (max = '*') or (min <= max.toInteger())",
                  "xpath": "not(exists(f:min)) or not(exists(f:max)) or (not(f:max/@value) and not(f:min/@value)) or (f:max/@value = '*') or (number(f:max/@value) >= f:min/@value)"
                },
                {
                  "key": "eld-5",
                  "severity": "error",
                  "human": "if the element definition has a contentReference, it cannot have type, defaultValue, fixed, pattern, example, minValue, maxValue, maxLength, or binding",
                  "expression": "contentReference.empty() or (type.empty() and defaultValue.empty() and fixed.empty() and pattern.empty() and example.empty() and minValue.empty() and maxValue.empty() and maxLength.empty() and binding.empty())",
                  "xpath": "not(exists(f:contentReference) and (exists(f:type) or exists(f:*[starts-with(local-name(.), 'value')]) or exists(f:*[starts-with(local-name(.), 'defaultValue')])  or exists(f:*[starts-with(local-name(.), 'fixed')]) or exists(f:*[starts-with(local-name(.), 'pattern')]) or exists(f:*[starts-with(local-name(.), 'example')]) or exists(f:*[starts-with(local-name(.), 'f:minValue')]) or exists(f:*[starts-with(local-name(.), 'f:maxValue')]) or exists(f:maxLength) or exists(f:binding)))"
                },
                {
                  "key": "eld-7",
                  "severity": "error",
                  "human": "Pattern may only be specified if there is one type",
                  "expression": "pattern.empty() or (type.count() <= 1)",
                  "xpath": "not(exists(f:*[starts-with(local-name(.), 'pattern')])) or (count(f:type)<=1)"
                },
                {
                  "key": "eld-6",
                  "severity": "error",
                  "human": "Fixed value may only be specified if there is one type",
                  "expression": "fixed.empty() or (type.count()  <= 1)",
                  "xpath": "not(exists(f:*[starts-with(local-name(.), 'fixed')])) or (count(f:type)<=1)"
                },
                {
                  "key": "eld-11",
                  "severity": "error",
                  "human": "Binding can only be present for coded elements, string, and uri",
                  "expression": "binding.empty() or type.code.empty() or type.select((code = 'code') or (code = 'Coding') or (code='CodeableConcept') or (code = 'Quantity') or (code = 'Extension') or (code = 'string') or (code = 'uri')).exists()",
                  "xpath": "not(exists(f:binding)) or (count(f:type/f:code) = 0) or  f:type/f:code/@value=('code','Coding','CodeableConcept','Quantity','Extension', 'string', 'uri')"
                },
                {
                  "key": "eld-8",
                  "severity": "error",
                  "human": "Pattern and value are mutually exclusive",
                  "expression": "pattern.empty() or fixed.empty()",
                  "xpath": "not(exists(f:*[starts-with(local-name(.), 'pattern')])) or not(exists(f:*[starts-with(local-name(.), 'fixed')]))"
                },
                {
                  "key": "eld-14",
                  "severity": "error",
                  "human": "Constraints must be unique by key",
                  "expression": "constraint.select(key).isDistinct()",
                  "xpath": "count(f:constraint) = count(distinct-values(f:constraint/f:key/@value))"
                },
                {
                  "key": "eld-13",
                  "severity": "error",
                  "human": "Types must be unique by the combination of code and profile",
                  "expression": "type.select(code&profile&targetProfile).isDistinct()",
                  "xpath": "not(exists(for $type in f:type return $type/preceding-sibling::f:type[f:code/@value=$type/f:code/@value and f:profile/@value = $type/f:profile/@value]))"
                },
                {
                  "key": "eld-16",
                  "severity": "error",
                  "human": "sliceName must be a proper token",
                  "expression": "sliceName.empty() or sliceName.matches('^[a-zA-Z0-9\\\\-\\\\_]+$')",
                  "xpath": "not(exists(f:sliceName/@value)) or matches(f:sliceName/@value, '^[a-zA-Z0-9\\\\-\\\\_]+$')"
                },
                {
                  "key": "eld-15",
                  "severity": "error",
                  "human": "default value and meaningWhenMissing are mutually exclusive",
                  "expression": "defaultValue.empty() or meaningWhenMissing.empty()",
                  "xpath": "not(exists(f:*[starts-with(local-name(.), 'fixed')])) or not(exists(f:meaningWhenMissing))"
                }
              ]
            },
            {
              "id": "ElementDefinition.id",
              "path": "ElementDefinition.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "ElementDefinition.extension",
              "path": "ElementDefinition.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "ElementDefinition.path",
              "path": "ElementDefinition.path",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.representation",
              "path": "ElementDefinition.representation",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "How a property is represented on the wire.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/property-representation"
                }
              }
            },
            {
              "id": "ElementDefinition.sliceName",
              "path": "ElementDefinition.sliceName",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.label",
              "path": "ElementDefinition.label",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.code",
              "path": "ElementDefinition.code",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Coding"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "example",
                "description": "Codes that indicate the meaning of a data element.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/observation-codes"
                }
              }
            },
            {
              "id": "ElementDefinition.slicing",
              "path": "ElementDefinition.slicing",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Element"
                }
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                },
                {
                  "key": "eld-1",
                  "severity": "error",
                  "human": "If there are no discriminators, there must be a definition",
                  "expression": "discriminator.exists() or description.exists()",
                  "xpath": "(f:discriminator) or (f:description)"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.slicing.id",
              "path": "ElementDefinition.slicing.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "ElementDefinition.slicing.extension",
              "path": "ElementDefinition.slicing.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "ElementDefinition.slicing.discriminator",
              "path": "ElementDefinition.slicing.discriminator",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.slicing.description",
              "path": "ElementDefinition.slicing.description",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "condition": [
                "eld-1"
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.slicing.ordered",
              "path": "ElementDefinition.slicing.ordered",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "boolean"
                }
              ],
              "defaultValueBoolean": false,
              "isSummary": true
            },
            {
              "id": "ElementDefinition.slicing.rules",
              "path": "ElementDefinition.slicing.rules",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "How slices are interpreted when evaluating an instance.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/resource-slicing-rules"
                }
              }
            },
            {
              "id": "ElementDefinition.short",
              "path": "ElementDefinition.short",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.definition",
              "path": "ElementDefinition.definition",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "markdown"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.comments",
              "path": "ElementDefinition.comments",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "markdown"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.requirements",
              "path": "ElementDefinition.requirements",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "markdown"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.alias",
              "path": "ElementDefinition.alias",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.min",
              "path": "ElementDefinition.min",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "integer"
                }
              ],
              "condition": [
                "eld-2"
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.max",
              "path": "ElementDefinition.max",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "condition": [
                "eld-3",
                "eld-2"
              ],
              "constraint": [
                {
                  "key": "eld-3",
                  "severity": "error",
                  "human": "Max SHALL be a number or \"*\"",
                  "expression": "empty() or ($this = '*') or (toInteger() >= 0)",
                  "xpath": "@value='*' or (normalize-space(@value)!='' and normalize-space(translate(@value, '0123456789',''))='')"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.base",
              "path": "ElementDefinition.base",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Element"
                }
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.base.id",
              "path": "ElementDefinition.base.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "ElementDefinition.base.extension",
              "path": "ElementDefinition.base.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "ElementDefinition.base.path",
              "path": "ElementDefinition.base.path",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.base.min",
              "path": "ElementDefinition.base.min",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "integer"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.base.max",
              "path": "ElementDefinition.base.max",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.contentReference",
              "path": "ElementDefinition.contentReference",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "condition": [
                "eld-5"
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.type",
              "extension": [
                {
                  "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
                  "valueString": "TypeRef"
                }
              ],
              "path": "ElementDefinition.type",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Element"
                }
              ],
              "condition": [
                "eld-13"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                },
                {
                  "key": "eld-4",
                  "severity": "error",
                  "human": "Aggregation may only be specified if one of the allowed types for the element is a resource",
                  "expression": "aggregation.empty() or (code = 'Reference')",
                  "xpath": "not(exists(f:aggregation)) or exists(f:code[@value = 'Reference'])"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.type.id",
              "path": "ElementDefinition.type.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "ElementDefinition.type.extension",
              "path": "ElementDefinition.type.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "ElementDefinition.type.code",
              "path": "ElementDefinition.type.code",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "extensible",
                "description": "Either a resource or a data type, including logical model types",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/defined-types"
                }
              }
            },
            {
              "id": "ElementDefinition.type.profile",
              "path": "ElementDefinition.type.profile",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.type.targetProfile",
              "path": "ElementDefinition.type.targetProfile",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.type.aggregation",
              "path": "ElementDefinition.type.aggregation",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "code"
                }
              ],
              "condition": [
                "eld-4"
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "How resource references can be aggregated.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/resource-aggregation-mode"
                }
              }
            },
            {
              "id": "ElementDefinition.type.versioning",
              "path": "ElementDefinition.type.versioning",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "defaultValueCode": "either",
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "Whether a reference needs to be version specific or version independent, or whetehr either can be used",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/reference-version-rules"
                }
              }
            },
            {
              "id": "ElementDefinition.defaultValue[x]",
              "path": "ElementDefinition.defaultValue[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "base64Binary"
                },
                {
                  "code": "boolean"
                },
                {
                  "code": "code"
                },
                {
                  "code": "date"
                },
                {
                  "code": "dateTime"
                },
                {
                  "code": "decimal"
                },
                {
                  "code": "id"
                },
                {
                  "code": "instant"
                },
                {
                  "code": "integer"
                },
                {
                  "code": "markdown"
                },
                {
                  "code": "oid"
                },
                {
                  "code": "positiveInt"
                },
                {
                  "code": "string"
                },
                {
                  "code": "time"
                },
                {
                  "code": "unsignedInt"
                },
                {
                  "code": "uri"
                },
                {
                  "code": "Address"
                },
                {
                  "code": "Age"
                },
                {
                  "code": "Annotation"
                },
                {
                  "code": "Attachment"
                },
                {
                  "code": "CodeableConcept"
                },
                {
                  "code": "Coding"
                },
                {
                  "code": "ContactPoint"
                },
                {
                  "code": "Count"
                },
                {
                  "code": "Distance"
                },
                {
                  "code": "Duration"
                },
                {
                  "code": "HumanName"
                },
                {
                  "code": "Identifier"
                },
                {
                  "code": "Money"
                },
                {
                  "code": "Period"
                },
                {
                  "code": "Quantity"
                },
                {
                  "code": "Range"
                },
                {
                  "code": "Ratio"
                },
                {
                  "code": "Reference"
                },
                {
                  "code": "SampledData"
                },
                {
                  "code": "Signature"
                },
                {
                  "code": "Timing"
                },
                {
                  "code": "Meta"
                }
              ],
              "condition": [
                "eld-15"
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.meaningWhenMissing",
              "path": "ElementDefinition.meaningWhenMissing",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "markdown"
                }
              ],
              "condition": [
                "eld-15"
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.fixed[x]",
              "path": "ElementDefinition.fixed[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "base64Binary"
                },
                {
                  "code": "boolean"
                },
                {
                  "code": "code"
                },
                {
                  "code": "date"
                },
                {
                  "code": "dateTime"
                },
                {
                  "code": "decimal"
                },
                {
                  "code": "id"
                },
                {
                  "code": "instant"
                },
                {
                  "code": "integer"
                },
                {
                  "code": "markdown"
                },
                {
                  "code": "oid"
                },
                {
                  "code": "positiveInt"
                },
                {
                  "code": "string"
                },
                {
                  "code": "time"
                },
                {
                  "code": "unsignedInt"
                },
                {
                  "code": "uri"
                },
                {
                  "code": "Address"
                },
                {
                  "code": "Age"
                },
                {
                  "code": "Annotation"
                },
                {
                  "code": "Attachment"
                },
                {
                  "code": "CodeableConcept"
                },
                {
                  "code": "Coding"
                },
                {
                  "code": "ContactPoint"
                },
                {
                  "code": "Count"
                },
                {
                  "code": "Distance"
                },
                {
                  "code": "Duration"
                },
                {
                  "code": "HumanName"
                },
                {
                  "code": "Identifier"
                },
                {
                  "code": "Money"
                },
                {
                  "code": "Period"
                },
                {
                  "code": "Quantity"
                },
                {
                  "code": "Range"
                },
                {
                  "code": "Ratio"
                },
                {
                  "code": "Reference"
                },
                {
                  "code": "SampledData"
                },
                {
                  "code": "Signature"
                },
                {
                  "code": "Timing"
                },
                {
                  "code": "Meta"
                }
              ],
              "condition": [
                "eld-5",
                "eld-6",
                "eld-8"
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.pattern[x]",
              "path": "ElementDefinition.pattern[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "base64Binary"
                },
                {
                  "code": "boolean"
                },
                {
                  "code": "code"
                },
                {
                  "code": "date"
                },
                {
                  "code": "dateTime"
                },
                {
                  "code": "decimal"
                },
                {
                  "code": "id"
                },
                {
                  "code": "instant"
                },
                {
                  "code": "integer"
                },
                {
                  "code": "markdown"
                },
                {
                  "code": "oid"
                },
                {
                  "code": "positiveInt"
                },
                {
                  "code": "string"
                },
                {
                  "code": "time"
                },
                {
                  "code": "unsignedInt"
                },
                {
                  "code": "uri"
                },
                {
                  "code": "Address"
                },
                {
                  "code": "Age"
                },
                {
                  "code": "Annotation"
                },
                {
                  "code": "Attachment"
                },
                {
                  "code": "CodeableConcept"
                },
                {
                  "code": "Coding"
                },
                {
                  "code": "ContactPoint"
                },
                {
                  "code": "Count"
                },
                {
                  "code": "Distance"
                },
                {
                  "code": "Duration"
                },
                {
                  "code": "HumanName"
                },
                {
                  "code": "Identifier"
                },
                {
                  "code": "Money"
                },
                {
                  "code": "Period"
                },
                {
                  "code": "Quantity"
                },
                {
                  "code": "Range"
                },
                {
                  "code": "Ratio"
                },
                {
                  "code": "Reference"
                },
                {
                  "code": "SampledData"
                },
                {
                  "code": "Signature"
                },
                {
                  "code": "Timing"
                },
                {
                  "code": "Meta"
                }
              ],
              "condition": [
                "eld-5",
                "eld-7",
                "eld-8"
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.example",
              "path": "ElementDefinition.example",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Element"
                }
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.example.id",
              "path": "ElementDefinition.example.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "ElementDefinition.example.extension",
              "path": "ElementDefinition.example.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "ElementDefinition.example.label",
              "path": "ElementDefinition.example.label",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.example.value[x]",
              "path": "ElementDefinition.example.value[x]",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "base64Binary"
                },
                {
                  "code": "boolean"
                },
                {
                  "code": "code"
                },
                {
                  "code": "date"
                },
                {
                  "code": "dateTime"
                },
                {
                  "code": "decimal"
                },
                {
                  "code": "id"
                },
                {
                  "code": "instant"
                },
                {
                  "code": "integer"
                },
                {
                  "code": "markdown"
                },
                {
                  "code": "oid"
                },
                {
                  "code": "positiveInt"
                },
                {
                  "code": "string"
                },
                {
                  "code": "time"
                },
                {
                  "code": "unsignedInt"
                },
                {
                  "code": "uri"
                },
                {
                  "code": "Address"
                },
                {
                  "code": "Age"
                },
                {
                  "code": "Annotation"
                },
                {
                  "code": "Attachment"
                },
                {
                  "code": "CodeableConcept"
                },
                {
                  "code": "Coding"
                },
                {
                  "code": "ContactPoint"
                },
                {
                  "code": "Count"
                },
                {
                  "code": "Distance"
                },
                {
                  "code": "Duration"
                },
                {
                  "code": "HumanName"
                },
                {
                  "code": "Identifier"
                },
                {
                  "code": "Money"
                },
                {
                  "code": "Period"
                },
                {
                  "code": "Quantity"
                },
                {
                  "code": "Range"
                },
                {
                  "code": "Ratio"
                },
                {
                  "code": "Reference"
                },
                {
                  "code": "SampledData"
                },
                {
                  "code": "Signature"
                },
                {
                  "code": "Timing"
                },
                {
                  "code": "Meta"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.minValue[x]",
              "path": "ElementDefinition.minValue[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "date"
                },
                {
                  "code": "dateTime"
                },
                {
                  "code": "instant"
                },
                {
                  "code": "time"
                },
                {
                  "code": "decimal"
                },
                {
                  "code": "integer"
                },
                {
                  "code": "positiveInt"
                },
                {
                  "code": "unsignedInt"
                },
                {
                  "code": "Quantity"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.maxValue[x]",
              "path": "ElementDefinition.maxValue[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "date"
                },
                {
                  "code": "dateTime"
                },
                {
                  "code": "instant"
                },
                {
                  "code": "time"
                },
                {
                  "code": "decimal"
                },
                {
                  "code": "integer"
                },
                {
                  "code": "positiveInt"
                },
                {
                  "code": "unsignedInt"
                },
                {
                  "code": "Quantity"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.maxLength",
              "path": "ElementDefinition.maxLength",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "integer"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.condition",
              "path": "ElementDefinition.condition",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "id"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.constraint",
              "path": "ElementDefinition.constraint",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Element"
                }
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.constraint.id",
              "path": "ElementDefinition.constraint.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "ElementDefinition.constraint.extension",
              "path": "ElementDefinition.constraint.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "ElementDefinition.constraint.key",
              "path": "ElementDefinition.constraint.key",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "id"
                }
              ],
              "condition": [
                "eld-14"
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.constraint.requirements",
              "path": "ElementDefinition.constraint.requirements",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.constraint.severity",
              "path": "ElementDefinition.constraint.severity",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "SHALL applications comply with this constraint?",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/constraint-severity"
                }
              }
            },
            {
              "id": "ElementDefinition.constraint.human",
              "path": "ElementDefinition.constraint.human",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.constraint.expression",
              "path": "ElementDefinition.constraint.expression",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.constraint.xpath",
              "path": "ElementDefinition.constraint.xpath",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.constraint.source",
              "path": "ElementDefinition.constraint.source",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.mustSupport",
              "path": "ElementDefinition.mustSupport",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "boolean"
                }
              ],
              "defaultValueBoolean": false,
              "isSummary": true
            },
            {
              "id": "ElementDefinition.isModifier",
              "path": "ElementDefinition.isModifier",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "boolean"
                }
              ],
              "defaultValueBoolean": false,
              "isSummary": true
            },
            {
              "id": "ElementDefinition.isSummary",
              "path": "ElementDefinition.isSummary",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "boolean"
                }
              ],
              "defaultValueBoolean": false,
              "isSummary": true
            },
            {
              "id": "ElementDefinition.binding",
              "path": "ElementDefinition.binding",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Element"
                }
              ],
              "condition": [
                "eld-11"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                },
                {
                  "key": "eld-10",
                  "severity": "error",
                  "human": "provide either a reference or a description (or both)",
                  "expression": "valueSet.exists() or description.exists()",
                  "xpath": "(exists(f:valueSetUri) or exists(f:valueSetReference)) or exists(f:description)"
                },
                {
                  "key": "eld-12",
                  "severity": "error",
                  "human": "ValueSet as a URI SHALL start with http:// or https:// or urn:",
                  "expression": "valueSet.is(uri).not() or valueSet.as(uri).startsWith('http:') or valueSet.as(uri).startsWith('https') or valueSet.as(uri).startsWith('urn:')",
                  "xpath": "not(exists(f:valueSetUri)) or (starts-with(string(f:valueSetUri/@value), 'http:') or starts-with(string(f:valueSetUri/@value), 'https:') or starts-with(string(f:valueSetUri/@value), 'urn:'))"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.binding.id",
              "path": "ElementDefinition.binding.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "ElementDefinition.binding.extension",
              "path": "ElementDefinition.binding.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "ElementDefinition.binding.strength",
              "path": "ElementDefinition.binding.strength",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "Indication of the degree of conformance expectations associated with a binding.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/binding-strength"
                }
              }
            },
            {
              "id": "ElementDefinition.binding.description",
              "path": "ElementDefinition.binding.description",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "condition": [
                "eld-10"
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.binding.valueSet[x]",
              "path": "ElementDefinition.binding.valueSet[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/ValueSet"
                }
              ],
              "condition": [
                "eld-10",
                "eld-12"
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.mapping",
              "path": "ElementDefinition.mapping",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Element"
                }
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.mapping.id",
              "path": "ElementDefinition.mapping.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "ElementDefinition.mapping.extension",
              "path": "ElementDefinition.mapping.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "ElementDefinition.mapping.identity",
              "path": "ElementDefinition.mapping.identity",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "id"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.mapping.language",
              "path": "ElementDefinition.mapping.language",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "The mime type of an attachment. Any valid mime type is allowed.",
                "valueSetUri": "http://www.rfc-editor.org/bcp/bcp13.txt"
              }
            },
            {
              "id": "ElementDefinition.mapping.map",
              "path": "ElementDefinition.mapping.map",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "ElementDefinition",
              "path": "ElementDefinition",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "eld-2",
                  "severity": "error",
                  "human": "Min <= Max",
                  "expression": "min.empty() or max.empty() or (max = '*') or (min <= max.toInteger())",
                  "xpath": "not(exists(f:min)) or not(exists(f:max)) or (not(f:max/@value) and not(f:min/@value)) or (f:max/@value = '*') or (number(f:max/@value) >= f:min/@value)"
                },
                {
                  "key": "eld-5",
                  "severity": "error",
                  "human": "if the element definition has a contentReference, it cannot have type, defaultValue, fixed, pattern, example, minValue, maxValue, maxLength, or binding",
                  "expression": "contentReference.empty() or (type.empty() and defaultValue.empty() and fixed.empty() and pattern.empty() and example.empty() and minValue.empty() and maxValue.empty() and maxLength.empty() and binding.empty())",
                  "xpath": "not(exists(f:contentReference) and (exists(f:type) or exists(f:*[starts-with(local-name(.), 'value')]) or exists(f:*[starts-with(local-name(.), 'defaultValue')])  or exists(f:*[starts-with(local-name(.), 'fixed')]) or exists(f:*[starts-with(local-name(.), 'pattern')]) or exists(f:*[starts-with(local-name(.), 'example')]) or exists(f:*[starts-with(local-name(.), 'f:minValue')]) or exists(f:*[starts-with(local-name(.), 'f:maxValue')]) or exists(f:maxLength) or exists(f:binding)))"
                },
                {
                  "key": "eld-7",
                  "severity": "error",
                  "human": "Pattern may only be specified if there is one type",
                  "expression": "pattern.empty() or (type.count() <= 1)",
                  "xpath": "not(exists(f:*[starts-with(local-name(.), 'pattern')])) or (count(f:type)<=1)"
                },
                {
                  "key": "eld-6",
                  "severity": "error",
                  "human": "Fixed value may only be specified if there is one type",
                  "expression": "fixed.empty() or (type.count()  <= 1)",
                  "xpath": "not(exists(f:*[starts-with(local-name(.), 'fixed')])) or (count(f:type)<=1)"
                },
                {
                  "key": "eld-11",
                  "severity": "error",
                  "human": "Binding can only be present for coded elements, string, and uri",
                  "expression": "binding.empty() or type.code.empty() or type.select((code = 'code') or (code = 'Coding') or (code='CodeableConcept') or (code = 'Quantity') or (code = 'Extension') or (code = 'string') or (code = 'uri')).exists()",
                  "xpath": "not(exists(f:binding)) or (count(f:type/f:code) = 0) or  f:type/f:code/@value=('code','Coding','CodeableConcept','Quantity','Extension', 'string', 'uri')"
                },
                {
                  "key": "eld-8",
                  "severity": "error",
                  "human": "Pattern and value are mutually exclusive",
                  "expression": "pattern.empty() or fixed.empty()",
                  "xpath": "not(exists(f:*[starts-with(local-name(.), 'pattern')])) or not(exists(f:*[starts-with(local-name(.), 'fixed')]))"
                },
                {
                  "key": "eld-14",
                  "severity": "error",
                  "human": "Constraints must be unique by key",
                  "expression": "constraint.select(key).isDistinct()",
                  "xpath": "count(f:constraint) = count(distinct-values(f:constraint/f:key/@value))"
                },
                {
                  "key": "eld-13",
                  "severity": "error",
                  "human": "Types must be unique by the combination of code and profile",
                  "expression": "type.select(code&profile&targetProfile).isDistinct()",
                  "xpath": "not(exists(for $type in f:type return $type/preceding-sibling::f:type[f:code/@value=$type/f:code/@value and f:profile/@value = $type/f:profile/@value]))"
                },
                {
                  "key": "eld-16",
                  "severity": "error",
                  "human": "sliceName must be a proper token",
                  "expression": "sliceName.empty() or sliceName.matches('^[a-zA-Z0-9\\\\-\\\\_]+$')",
                  "xpath": "not(exists(f:sliceName/@value)) or matches(f:sliceName/@value, '^[a-zA-Z0-9\\\\-\\\\_]+$')"
                },
                {
                  "key": "eld-15",
                  "severity": "error",
                  "human": "default value and meaningWhenMissing are mutually exclusive",
                  "expression": "defaultValue.empty() or meaningWhenMissing.empty()",
                  "xpath": "not(exists(f:*[starts-with(local-name(.), 'fixed')])) or not(exists(f:meaningWhenMissing))"
                }
              ]
            },
            {
              "id": "ElementDefinition.path",
              "path": "ElementDefinition.path",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.representation",
              "path": "ElementDefinition.representation",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "How a property is represented on the wire.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/property-representation"
                }
              }
            },
            {
              "id": "ElementDefinition.sliceName",
              "path": "ElementDefinition.sliceName",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.label",
              "path": "ElementDefinition.label",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.code",
              "path": "ElementDefinition.code",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Coding"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "example",
                "description": "Codes that indicate the meaning of a data element.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/observation-codes"
                }
              }
            },
            {
              "id": "ElementDefinition.slicing",
              "path": "ElementDefinition.slicing",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Element"
                }
              ],
              "constraint": [
                {
                  "key": "eld-1",
                  "severity": "error",
                  "human": "If there are no discriminators, there must be a definition",
                  "expression": "discriminator.exists() or description.exists()",
                  "xpath": "(f:discriminator) or (f:description)"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.slicing.discriminator",
              "path": "ElementDefinition.slicing.discriminator",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.slicing.description",
              "path": "ElementDefinition.slicing.description",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "condition": [
                "eld-1"
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.slicing.ordered",
              "path": "ElementDefinition.slicing.ordered",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "boolean"
                }
              ],
              "defaultValueBoolean": false,
              "isSummary": true
            },
            {
              "id": "ElementDefinition.slicing.rules",
              "path": "ElementDefinition.slicing.rules",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "How slices are interpreted when evaluating an instance.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/resource-slicing-rules"
                }
              }
            },
            {
              "id": "ElementDefinition.short",
              "path": "ElementDefinition.short",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.definition",
              "path": "ElementDefinition.definition",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "markdown"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.comments",
              "path": "ElementDefinition.comments",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "markdown"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.requirements",
              "path": "ElementDefinition.requirements",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "markdown"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.alias",
              "path": "ElementDefinition.alias",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.min",
              "path": "ElementDefinition.min",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "integer"
                }
              ],
              "condition": [
                "eld-2"
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.max",
              "path": "ElementDefinition.max",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "condition": [
                "eld-3",
                "eld-2"
              ],
              "constraint": [
                {
                  "key": "eld-3",
                  "severity": "error",
                  "human": "Max SHALL be a number or \"*\"",
                  "expression": "empty() or ($this = '*') or (toInteger() >= 0)",
                  "xpath": "@value='*' or (normalize-space(@value)!='' and normalize-space(translate(@value, '0123456789',''))='')"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.base",
              "path": "ElementDefinition.base",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Element"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.base.path",
              "path": "ElementDefinition.base.path",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.base.min",
              "path": "ElementDefinition.base.min",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "integer"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.base.max",
              "path": "ElementDefinition.base.max",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.contentReference",
              "path": "ElementDefinition.contentReference",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "condition": [
                "eld-5"
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.type",
              "extension": [
                {
                  "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
                  "valueString": "TypeRef"
                }
              ],
              "path": "ElementDefinition.type",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Element"
                }
              ],
              "condition": [
                "eld-13"
              ],
              "constraint": [
                {
                  "key": "eld-4",
                  "severity": "error",
                  "human": "Aggregation may only be specified if one of the allowed types for the element is a resource",
                  "expression": "aggregation.empty() or (code = 'Reference')",
                  "xpath": "not(exists(f:aggregation)) or exists(f:code[@value = 'Reference'])"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.type.code",
              "path": "ElementDefinition.type.code",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "extensible",
                "description": "Either a resource or a data type, including logical model types",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/defined-types"
                }
              }
            },
            {
              "id": "ElementDefinition.type.profile",
              "path": "ElementDefinition.type.profile",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.type.targetProfile",
              "path": "ElementDefinition.type.targetProfile",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.type.aggregation",
              "path": "ElementDefinition.type.aggregation",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "code"
                }
              ],
              "condition": [
                "eld-4"
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "How resource references can be aggregated.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/resource-aggregation-mode"
                }
              }
            },
            {
              "id": "ElementDefinition.type.versioning",
              "path": "ElementDefinition.type.versioning",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "defaultValueCode": "either",
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "Whether a reference needs to be version specific or version independent, or whetehr either can be used",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/reference-version-rules"
                }
              }
            },
            {
              "id": "ElementDefinition.defaultValue[x]",
              "path": "ElementDefinition.defaultValue[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "base64Binary"
                },
                {
                  "code": "boolean"
                },
                {
                  "code": "code"
                },
                {
                  "code": "date"
                },
                {
                  "code": "dateTime"
                },
                {
                  "code": "decimal"
                },
                {
                  "code": "id"
                },
                {
                  "code": "instant"
                },
                {
                  "code": "integer"
                },
                {
                  "code": "markdown"
                },
                {
                  "code": "oid"
                },
                {
                  "code": "positiveInt"
                },
                {
                  "code": "string"
                },
                {
                  "code": "time"
                },
                {
                  "code": "unsignedInt"
                },
                {
                  "code": "uri"
                },
                {
                  "code": "Address"
                },
                {
                  "code": "Age"
                },
                {
                  "code": "Annotation"
                },
                {
                  "code": "Attachment"
                },
                {
                  "code": "CodeableConcept"
                },
                {
                  "code": "Coding"
                },
                {
                  "code": "ContactPoint"
                },
                {
                  "code": "Count"
                },
                {
                  "code": "Distance"
                },
                {
                  "code": "Duration"
                },
                {
                  "code": "HumanName"
                },
                {
                  "code": "Identifier"
                },
                {
                  "code": "Money"
                },
                {
                  "code": "Period"
                },
                {
                  "code": "Quantity"
                },
                {
                  "code": "Range"
                },
                {
                  "code": "Ratio"
                },
                {
                  "code": "Reference"
                },
                {
                  "code": "SampledData"
                },
                {
                  "code": "Signature"
                },
                {
                  "code": "Timing"
                },
                {
                  "code": "Meta"
                }
              ],
              "condition": [
                "eld-15"
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.meaningWhenMissing",
              "path": "ElementDefinition.meaningWhenMissing",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "markdown"
                }
              ],
              "condition": [
                "eld-15"
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.fixed[x]",
              "path": "ElementDefinition.fixed[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "base64Binary"
                },
                {
                  "code": "boolean"
                },
                {
                  "code": "code"
                },
                {
                  "code": "date"
                },
                {
                  "code": "dateTime"
                },
                {
                  "code": "decimal"
                },
                {
                  "code": "id"
                },
                {
                  "code": "instant"
                },
                {
                  "code": "integer"
                },
                {
                  "code": "markdown"
                },
                {
                  "code": "oid"
                },
                {
                  "code": "positiveInt"
                },
                {
                  "code": "string"
                },
                {
                  "code": "time"
                },
                {
                  "code": "unsignedInt"
                },
                {
                  "code": "uri"
                },
                {
                  "code": "Address"
                },
                {
                  "code": "Age"
                },
                {
                  "code": "Annotation"
                },
                {
                  "code": "Attachment"
                },
                {
                  "code": "CodeableConcept"
                },
                {
                  "code": "Coding"
                },
                {
                  "code": "ContactPoint"
                },
                {
                  "code": "Count"
                },
                {
                  "code": "Distance"
                },
                {
                  "code": "Duration"
                },
                {
                  "code": "HumanName"
                },
                {
                  "code": "Identifier"
                },
                {
                  "code": "Money"
                },
                {
                  "code": "Period"
                },
                {
                  "code": "Quantity"
                },
                {
                  "code": "Range"
                },
                {
                  "code": "Ratio"
                },
                {
                  "code": "Reference"
                },
                {
                  "code": "SampledData"
                },
                {
                  "code": "Signature"
                },
                {
                  "code": "Timing"
                },
                {
                  "code": "Meta"
                }
              ],
              "condition": [
                "eld-5",
                "eld-6",
                "eld-8"
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.pattern[x]",
              "path": "ElementDefinition.pattern[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "base64Binary"
                },
                {
                  "code": "boolean"
                },
                {
                  "code": "code"
                },
                {
                  "code": "date"
                },
                {
                  "code": "dateTime"
                },
                {
                  "code": "decimal"
                },
                {
                  "code": "id"
                },
                {
                  "code": "instant"
                },
                {
                  "code": "integer"
                },
                {
                  "code": "markdown"
                },
                {
                  "code": "oid"
                },
                {
                  "code": "positiveInt"
                },
                {
                  "code": "string"
                },
                {
                  "code": "time"
                },
                {
                  "code": "unsignedInt"
                },
                {
                  "code": "uri"
                },
                {
                  "code": "Address"
                },
                {
                  "code": "Age"
                },
                {
                  "code": "Annotation"
                },
                {
                  "code": "Attachment"
                },
                {
                  "code": "CodeableConcept"
                },
                {
                  "code": "Coding"
                },
                {
                  "code": "ContactPoint"
                },
                {
                  "code": "Count"
                },
                {
                  "code": "Distance"
                },
                {
                  "code": "Duration"
                },
                {
                  "code": "HumanName"
                },
                {
                  "code": "Identifier"
                },
                {
                  "code": "Money"
                },
                {
                  "code": "Period"
                },
                {
                  "code": "Quantity"
                },
                {
                  "code": "Range"
                },
                {
                  "code": "Ratio"
                },
                {
                  "code": "Reference"
                },
                {
                  "code": "SampledData"
                },
                {
                  "code": "Signature"
                },
                {
                  "code": "Timing"
                },
                {
                  "code": "Meta"
                }
              ],
              "condition": [
                "eld-5",
                "eld-7",
                "eld-8"
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.example",
              "path": "ElementDefinition.example",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Element"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.example.label",
              "path": "ElementDefinition.example.label",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.example.value[x]",
              "path": "ElementDefinition.example.value[x]",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "base64Binary"
                },
                {
                  "code": "boolean"
                },
                {
                  "code": "code"
                },
                {
                  "code": "date"
                },
                {
                  "code": "dateTime"
                },
                {
                  "code": "decimal"
                },
                {
                  "code": "id"
                },
                {
                  "code": "instant"
                },
                {
                  "code": "integer"
                },
                {
                  "code": "markdown"
                },
                {
                  "code": "oid"
                },
                {
                  "code": "positiveInt"
                },
                {
                  "code": "string"
                },
                {
                  "code": "time"
                },
                {
                  "code": "unsignedInt"
                },
                {
                  "code": "uri"
                },
                {
                  "code": "Address"
                },
                {
                  "code": "Age"
                },
                {
                  "code": "Annotation"
                },
                {
                  "code": "Attachment"
                },
                {
                  "code": "CodeableConcept"
                },
                {
                  "code": "Coding"
                },
                {
                  "code": "ContactPoint"
                },
                {
                  "code": "Count"
                },
                {
                  "code": "Distance"
                },
                {
                  "code": "Duration"
                },
                {
                  "code": "HumanName"
                },
                {
                  "code": "Identifier"
                },
                {
                  "code": "Money"
                },
                {
                  "code": "Period"
                },
                {
                  "code": "Quantity"
                },
                {
                  "code": "Range"
                },
                {
                  "code": "Ratio"
                },
                {
                  "code": "Reference"
                },
                {
                  "code": "SampledData"
                },
                {
                  "code": "Signature"
                },
                {
                  "code": "Timing"
                },
                {
                  "code": "Meta"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.minValue[x]",
              "path": "ElementDefinition.minValue[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "date"
                },
                {
                  "code": "dateTime"
                },
                {
                  "code": "instant"
                },
                {
                  "code": "time"
                },
                {
                  "code": "decimal"
                },
                {
                  "code": "integer"
                },
                {
                  "code": "positiveInt"
                },
                {
                  "code": "unsignedInt"
                },
                {
                  "code": "Quantity"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.maxValue[x]",
              "path": "ElementDefinition.maxValue[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "date"
                },
                {
                  "code": "dateTime"
                },
                {
                  "code": "instant"
                },
                {
                  "code": "time"
                },
                {
                  "code": "decimal"
                },
                {
                  "code": "integer"
                },
                {
                  "code": "positiveInt"
                },
                {
                  "code": "unsignedInt"
                },
                {
                  "code": "Quantity"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.maxLength",
              "path": "ElementDefinition.maxLength",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "integer"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.condition",
              "path": "ElementDefinition.condition",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "id"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.constraint",
              "path": "ElementDefinition.constraint",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Element"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.constraint.key",
              "path": "ElementDefinition.constraint.key",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "id"
                }
              ],
              "condition": [
                "eld-14"
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.constraint.requirements",
              "path": "ElementDefinition.constraint.requirements",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.constraint.severity",
              "path": "ElementDefinition.constraint.severity",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "SHALL applications comply with this constraint?",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/constraint-severity"
                }
              }
            },
            {
              "id": "ElementDefinition.constraint.human",
              "path": "ElementDefinition.constraint.human",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.constraint.expression",
              "path": "ElementDefinition.constraint.expression",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.constraint.xpath",
              "path": "ElementDefinition.constraint.xpath",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.constraint.source",
              "path": "ElementDefinition.constraint.source",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.mustSupport",
              "path": "ElementDefinition.mustSupport",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "boolean"
                }
              ],
              "defaultValueBoolean": false,
              "isSummary": true
            },
            {
              "id": "ElementDefinition.isModifier",
              "path": "ElementDefinition.isModifier",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "boolean"
                }
              ],
              "defaultValueBoolean": false,
              "isSummary": true
            },
            {
              "id": "ElementDefinition.isSummary",
              "path": "ElementDefinition.isSummary",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "boolean"
                }
              ],
              "defaultValueBoolean": false,
              "isSummary": true
            },
            {
              "id": "ElementDefinition.binding",
              "path": "ElementDefinition.binding",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Element"
                }
              ],
              "condition": [
                "eld-11"
              ],
              "constraint": [
                {
                  "key": "eld-10",
                  "severity": "error",
                  "human": "provide either a reference or a description (or both)",
                  "expression": "valueSet.exists() or description.exists()",
                  "xpath": "(exists(f:valueSetUri) or exists(f:valueSetReference)) or exists(f:description)"
                },
                {
                  "key": "eld-12",
                  "severity": "error",
                  "human": "ValueSet as a URI SHALL start with http:// or https:// or urn:",
                  "expression": "valueSet.is(uri).not() or valueSet.as(uri).startsWith('http:') or valueSet.as(uri).startsWith('https') or valueSet.as(uri).startsWith('urn:')",
                  "xpath": "not(exists(f:valueSetUri)) or (starts-with(string(f:valueSetUri/@value), 'http:') or starts-with(string(f:valueSetUri/@value), 'https:') or starts-with(string(f:valueSetUri/@value), 'urn:'))"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.binding.strength",
              "path": "ElementDefinition.binding.strength",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "Indication of the degree of conformance expectations associated with a binding.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/binding-strength"
                }
              }
            },
            {
              "id": "ElementDefinition.binding.description",
              "path": "ElementDefinition.binding.description",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "condition": [
                "eld-10"
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.binding.valueSet[x]",
              "path": "ElementDefinition.binding.valueSet[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "uri"
                },
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/ValueSet"
                }
              ],
              "condition": [
                "eld-10",
                "eld-12"
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.mapping",
              "path": "ElementDefinition.mapping",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "Element"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.mapping.identity",
              "path": "ElementDefinition.mapping.identity",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "id"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ElementDefinition.mapping.language",
              "path": "ElementDefinition.mapping.language",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "The mime type of an attachment. Any valid mime type is allowed.",
                "valueSetUri": "http://www.rfc-editor.org/bcp/bcp13.txt"
              }
            },
            {
              "id": "ElementDefinition.mapping.map",
              "path": "ElementDefinition.mapping.map",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/DosageInstruction",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "DosageInstruction",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/DosageInstruction",
        "name": "DosageInstruction",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "DosageInstruction",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "DosageInstruction",
              "path": "DosageInstruction",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "DosageInstruction.id",
              "path": "DosageInstruction.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "DosageInstruction.extension",
              "path": "DosageInstruction.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "DosageInstruction.sequence",
              "path": "DosageInstruction.sequence",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "integer"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DosageInstruction.text",
              "path": "DosageInstruction.text",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DosageInstruction.additionalInstructions",
              "path": "DosageInstruction.additionalInstructions",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "CodeableConcept"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "example",
                "description": "A coded concept identifying additional instructions such as \"take with water\" or \"avoid operating heavy machinery\".",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/additional-instructions-codes"
                }
              }
            },
            {
              "id": "DosageInstruction.timing",
              "path": "DosageInstruction.timing",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Timing"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DosageInstruction.asNeeded[x]",
              "path": "DosageInstruction.asNeeded[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "boolean"
                },
                {
                  "code": "CodeableConcept"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "example",
                "description": "A coded concept identifying the precondition that should be met or evaluated prior to consuming or administering a medication dose.  For example \"pain\", \"30 minutes prior to sexual intercourse\", \"on flare-up\" etc.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/medication-as-needed-reason"
                }
              }
            },
            {
              "id": "DosageInstruction.site",
              "path": "DosageInstruction.site",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "CodeableConcept"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "example",
                "description": "A coded concept describing the site location the medicine enters into or onto the body.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/approach-site-codes"
                }
              }
            },
            {
              "id": "DosageInstruction.route",
              "path": "DosageInstruction.route",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "CodeableConcept"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "example",
                "description": "A coded concept describing the route or physiological path of administration of a therapeutic agent into or onto the body of a subject.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/route-codes"
                }
              }
            },
            {
              "id": "DosageInstruction.method",
              "path": "DosageInstruction.method",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "CodeableConcept"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "example",
                "description": "A coded concept describing the technique by which the medicine is administered.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/administration-method-codes"
                }
              }
            },
            {
              "id": "DosageInstruction.dose[x]",
              "path": "DosageInstruction.dose[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Range"
                },
                {
                  "code": "Quantity",
                  "profile": "http://hl7.org/fhir/StructureDefinition/SimpleQuantity"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DosageInstruction.maxDosePerPeriod",
              "path": "DosageInstruction.maxDosePerPeriod",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Ratio"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DosageInstruction.maxDosePerAdministration",
              "path": "DosageInstruction.maxDosePerAdministration",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Quantity",
                  "profile": "http://hl7.org/fhir/StructureDefinition/SimpleQuantity"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DosageInstruction.maxDosePerLifetime",
              "path": "DosageInstruction.maxDosePerLifetime",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Quantity",
                  "profile": "http://hl7.org/fhir/StructureDefinition/SimpleQuantity"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DosageInstruction.rate[x]",
              "path": "DosageInstruction.rate[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Ratio"
                },
                {
                  "code": "Range"
                },
                {
                  "code": "Quantity",
                  "profile": "http://hl7.org/fhir/StructureDefinition/SimpleQuantity"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "DosageInstruction",
              "path": "DosageInstruction",
              "min": 0,
              "max": "*"
            },
            {
              "id": "DosageInstruction.sequence",
              "path": "DosageInstruction.sequence",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "integer"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DosageInstruction.text",
              "path": "DosageInstruction.text",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DosageInstruction.additionalInstructions",
              "path": "DosageInstruction.additionalInstructions",
              "min": 0,
              "max": "*",
              "type": [
                {
                  "code": "CodeableConcept"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "example",
                "description": "A coded concept identifying additional instructions such as \"take with water\" or \"avoid operating heavy machinery\".",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/additional-instructions-codes"
                }
              }
            },
            {
              "id": "DosageInstruction.timing",
              "path": "DosageInstruction.timing",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Timing"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DosageInstruction.asNeeded[x]",
              "path": "DosageInstruction.asNeeded[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "boolean"
                },
                {
                  "code": "CodeableConcept"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "example",
                "description": "A coded concept identifying the precondition that should be met or evaluated prior to consuming or administering a medication dose.  For example \"pain\", \"30 minutes prior to sexual intercourse\", \"on flare-up\" etc.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/medication-as-needed-reason"
                }
              }
            },
            {
              "id": "DosageInstruction.site",
              "path": "DosageInstruction.site",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "CodeableConcept"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "example",
                "description": "A coded concept describing the site location the medicine enters into or onto the body.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/approach-site-codes"
                }
              }
            },
            {
              "id": "DosageInstruction.route",
              "path": "DosageInstruction.route",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "CodeableConcept"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "example",
                "description": "A coded concept describing the route or physiological path of administration of a therapeutic agent into or onto the body of a subject.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/route-codes"
                }
              }
            },
            {
              "id": "DosageInstruction.method",
              "path": "DosageInstruction.method",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "CodeableConcept"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "example",
                "description": "A coded concept describing the technique by which the medicine is administered.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/administration-method-codes"
                }
              }
            },
            {
              "id": "DosageInstruction.dose[x]",
              "path": "DosageInstruction.dose[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Range"
                },
                {
                  "code": "Quantity",
                  "profile": "http://hl7.org/fhir/StructureDefinition/SimpleQuantity"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DosageInstruction.maxDosePerPeriod",
              "path": "DosageInstruction.maxDosePerPeriod",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Ratio"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DosageInstruction.maxDosePerAdministration",
              "path": "DosageInstruction.maxDosePerAdministration",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Quantity",
                  "profile": "http://hl7.org/fhir/StructureDefinition/SimpleQuantity"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DosageInstruction.maxDosePerLifetime",
              "path": "DosageInstruction.maxDosePerLifetime",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Quantity",
                  "profile": "http://hl7.org/fhir/StructureDefinition/SimpleQuantity"
                }
              ],
              "isSummary": true
            },
            {
              "id": "DosageInstruction.rate[x]",
              "path": "DosageInstruction.rate[x]",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Ratio"
                },
                {
                  "code": "Range"
                },
                {
                  "code": "Quantity",
                  "profile": "http://hl7.org/fhir/StructureDefinition/SimpleQuantity"
                }
              ],
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/ParameterDefinition",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "ParameterDefinition",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/ParameterDefinition",
        "name": "ParameterDefinition",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "ParameterDefinition",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
        "derivation": "specialization",
        "snapshot": {
          "element": [
            {
              "id": "ParameterDefinition",
              "path": "ParameterDefinition",
              "min": 0,
              "max": "*",
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                }
              ]
            },
            {
              "id": "ParameterDefinition.id",
              "path": "ParameterDefinition.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "ParameterDefinition.extension",
              "path": "ParameterDefinition.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "ParameterDefinition.name",
              "path": "ParameterDefinition.name",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ParameterDefinition.use",
              "path": "ParameterDefinition.use",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "Whether the parameter is input or output",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/operation-parameter-use"
                }
              }
            },
            {
              "id": "ParameterDefinition.min",
              "path": "ParameterDefinition.min",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "integer"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ParameterDefinition.max",
              "path": "ParameterDefinition.max",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ParameterDefinition.documentation",
              "path": "ParameterDefinition.documentation",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ParameterDefinition.type",
              "path": "ParameterDefinition.type",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "Either an abstract type, a resource or a data type.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/all-types"
                }
              }
            },
            {
              "id": "ParameterDefinition.profile",
              "path": "ParameterDefinition.profile",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/StructureDefinition"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "ParameterDefinition",
              "path": "ParameterDefinition",
              "min": 0,
              "max": "*"
            },
            {
              "id": "ParameterDefinition.name",
              "path": "ParameterDefinition.name",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ParameterDefinition.use",
              "path": "ParameterDefinition.use",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "Whether the parameter is input or output",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/operation-parameter-use"
                }
              }
            },
            {
              "id": "ParameterDefinition.min",
              "path": "ParameterDefinition.min",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "integer"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ParameterDefinition.max",
              "path": "ParameterDefinition.max",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ParameterDefinition.documentation",
              "path": "ParameterDefinition.documentation",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "ParameterDefinition.type",
              "path": "ParameterDefinition.type",
              "min": 1,
              "max": "1",
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "Either an abstract type, a resource or a data type.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/all-types"
                }
              }
            },
            {
              "id": "ParameterDefinition.profile",
              "path": "ParameterDefinition.profile",
              "min": 0,
              "max": "1",
              "type": [
                {
                  "code": "Reference",
                  "targetProfile": "http://hl7.org/fhir/StructureDefinition/StructureDefinition"
                }
              ],
              "isSummary": true
            }
          ]
        }
      }
    },
    {
      "fullUrl": "http://hl7.org/fhir/StructureDefinition/SimpleQuantity",
      "resource": {
        "resourceType": "StructureDefinition",
        "id": "SimpleQuantity",
        "meta": {
          "lastUpdated": "2016-12-07T09:17:27.548-05:00"
        },
        "url": "http://hl7.org/fhir/StructureDefinition/SimpleQuantity",
        "name": "SimpleQuantity",
        "status": "draft",
        "date": "2016-12-07T09:17:27-05:00",
        "fhirVersion": "1.8.0",
        "kind": "complex-type",
        "abstract": false,
        "type": "Quantity",
        "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Quantity",
        "derivation": "constraint",
        "snapshot": {
          "element": [
            {
              "id": "Quantity:simplequantity",
              "path": "Quantity",
              "sliceName": "SimpleQuantity",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Quantity",
                "min": 0,
                "max": "*"
              },
              "condition": [
                "ele-1"
              ],
              "constraint": [
                {
                  "key": "ele-1",
                  "severity": "error",
                  "human": "All FHIR elements must have a @value or children",
                  "expression": "children().count() > id.count()",
                  "xpath": "@value|f:*|h:div",
                  "source": "Element"
                },
                {
                  "key": "qty-3",
                  "severity": "error",
                  "human": "If a code for the unit is present, the system SHALL also be present",
                  "expression": "code.empty() or system.exists()",
                  "xpath": "not(exists(f:code)) or exists(f:system)",
                  "source": "Quantity"
                },
                {
                  "key": "sqty-1",
                  "severity": "error",
                  "human": "The comparator is not used on a SimpleQuantity",
                  "expression": "comparator.empty()",
                  "xpath": "not(exists(f:comparator))"
                }
              ]
            },
            {
              "id": "Quantity:simplequantity.id",
              "path": "Quantity.id",
              "representation": [
                "xmlAttr"
              ],
              "min": 0,
              "max": "1",
              "base": {
                "path": "Element.id",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ]
            },
            {
              "id": "Quantity:simplequantity.extension",
              "path": "Quantity.extension",
              "min": 0,
              "max": "*",
              "base": {
                "path": "Element.extension",
                "min": 0,
                "max": "*"
              },
              "type": [
                {
                  "code": "Extension"
                }
              ]
            },
            {
              "id": "Quantity:simplequantity.value",
              "path": "Quantity.value",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.value",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "decimal"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Quantity:simplequantity.comparator",
              "path": "Quantity.comparator",
              "min": 0,
              "max": "0",
              "base": {
                "path": "Quantity.comparator",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "code"
                }
              ],
              "meaningWhenMissing": "If there is no comparator, then there is no modification of the value",
              "isModifier": true,
              "isSummary": true,
              "binding": {
                "strength": "required",
                "description": "How the Quantity should be understood and represented.",
                "valueSetReference": {
                  "reference": "http://hl7.org/fhir/ValueSet/quantity-comparator"
                }
              }
            },
            {
              "id": "Quantity:simplequantity.unit",
              "path": "Quantity.unit",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.unit",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "string"
                }
              ],
              "isSummary": true
            },
            {
              "id": "Quantity:simplequantity.system",
              "path": "Quantity.system",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.system",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "uri"
                }
              ],
              "condition": [
                "qty-3"
              ],
              "isSummary": true
            },
            {
              "id": "Quantity:simplequantity.code",
              "path": "Quantity.code",
              "min": 0,
              "max": "1",
              "base": {
                "path": "Quantity.code",
                "min": 0,
                "max": "1"
              },
              "type": [
                {
                  "code": "code"
                }
              ],
              "isSummary": true
            }
          ]
        },
        "differential": {
          "element": [
            {
              "id": "Quantity:simplequantity",
              "path": "Quantity",
              "sliceName": "SimpleQuantity",
              "min": 0,
              "max": "*",
              "constraint": [
                {
                  "key": "sqty-1",
                  "severity": "error",
                  "human": "The comparator is not used on a SimpleQuantity",
                  "expression": "comparator.empty()",
                  "xpath": "not(exists(f:comparator))"
                }
              ],
              "isModifier": false
            },
            {
              "id": "Quantity:simplequantity.comparator",
              "path": "Quantity.comparator",
              "max": "0"
            }
          ]
        }
      }
    }
  ]
}